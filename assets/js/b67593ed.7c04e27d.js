"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[1064],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>f});var t=r(7294);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=t.createContext({}),p=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?t.createElement(f,i(i({ref:n},c),{},{components:r})):t.createElement(f,i({ref:n},c))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5249:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var t=r(7462),a=(r(7294),r(3905));const o={},i=void 0,l={unversionedId:"\u5f15\u8a00/\u6848\u4f8b",id:"\u5f15\u8a00/\u6848\u4f8b",title:"\u6848\u4f8b",description:"\u989c\u8272\u91cf\u5316",source:"@site/docs/\u5f15\u8a00/\u6848\u4f8b.md",sourceDirName:"\u5f15\u8a00",slug:"/\u5f15\u8a00/\u6848\u4f8b",permalink:"/course/docs/\u5f15\u8a00/\u6848\u4f8b",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u56fe\u793a",permalink:"/course/docs/"},next:{title:"1Python\u7684\u5386\u53f2\u548c\u53d1\u5c55-\u4e0a",permalink:"/course/docs/\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/1Python\u7684\u5386\u53f2\u548c\u53d1\u5c55-\u4e0a"}},s={},p=[{value:"\u989c\u8272\u91cf\u5316",id:"\u989c\u8272\u91cf\u5316",level:2},{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",level:3},{value:"\u9898\u89e3",id:"\u9898\u89e3",level:3}],c={toc:p},m="wrapper";function u(e){let{components:n,...r}=e;return(0,a.kt)(m,(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u989c\u8272\u91cf\u5316"},"\u989c\u8272\u91cf\u5316"),(0,a.kt)("h3",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,a.kt)("p",null,"\u56fe\u7247\u7684\u989c\u8272\u6570\u91cf\u8d8a\u591a\uff0c\u56fe\u7247\u5c31\u8d8a\u96be\u4ee5\u538b\u7f29\uff0c\u56fe\u7247\u7684\u5927\u5c0f\u5c31\u8d8a\u5927\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u56fe\u7247\u8fdb\u884c\u989c\u8272\u91cf\u5316\uff0c\u51cf\u5c11\u56fe\u7247\u7684\u5927\u5c0f\uff0c\u5c06\u56fe\u50cf\u6240\u9700\u7684\u989c\u8272\u6570\u91cf\u4ece96615\u51cf\u5c11\u523064\uff0c\u540c\u65f6\u4fdd\u6301\u6574\u4f53\u5916\u89c2\u8d28\u91cf\u3002\u8bf7\u9009\u62e9\u5408\u9002\u7684\u6a21\u578b\u6765\u5b8c\u6210\u8fd9\u4e2a\u9879\u76ee\u3002"),(0,a.kt)("p",null,"\u56fe\u50cf\u6765\u6e90",(0,a.kt)("inlineCode",{parentName:"p"},'sklearn.datasets.load_sample_image("china.jpg")')),(0,a.kt)("h3",{id:"\u9898\u89e3"},"\u9898\u89e3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"# \u5bfc\u5165\u6838\u5fc3\u6a21\u5757\nfrom sklearn.datasets import load_sample_image\nfrom sklearn.cluster import KMeans\n\n# \u5bfc\u5165\u8f85\u52a9\u6a21\u5757\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import pairwise_distances_argmin\nfrom sklearn.utils import shuffle\n\n# \u8f7d\u5165\u56fe\u7247\nchina = load_sample_image(\"china.jpg\")\n\n# print(type(china)) # <class 'numpy.ndarray'>\n# print(china.shape) # (427, 640, 3)\n\n# \u67e5\u770b\u539f\u56fe\nplt.figure(1)\nplt.clf()\nplt.axis('off')\nplt.title('Original image (96,615 colors)')\nplt.imshow(china)\n\n# \u8bbe\u5b9aK\u503c\nn_colors = 64\n\n# \u751f\u6210k\u5747\u503c\u6a21\u578b\nkmeans = KMeans(n_clusters=n_colors, random_state=0)\n\n# \u5904\u7406\u6570\u636e\nchina = np.array(china, dtype=np.float64) / 255 \n# print(china.shape) # (427, 640, 3)\n# print(china) # \u628a\u6570\u636e\u53d8\u62100-1\u7684\u533a\u95f4\u5185\uff0c\u65b9\u4fbf\u8bad\u7ec3\nw, h, d = original_shape = tuple(china.shape) # (427, 640, 3)\n# assert d == 3 # \u65ad\u8a00,\u53ef\u4e0d\u5199\nimage_array = np.reshape(china, (w * h, d))\n# print(image_array.shape) # (273280, 3)\n# print(image_array) # \u628a\u6570\u636e\u53d8\u6210\u4e00\u884c\u4e00\u884c\u7684\n# \u6253\u4e71\u6570\u636e\nimage_array_sample = shuffle(image_array, random_state=0)[:1000] # \u53ef\u4ee5\u53d8\uff0c\u4f46\u662f\u8981\u5c0f\u4e8e273280\n\n# \u8bad\u7ec3\u6a21\u578b\nkmeans.fit(image_array_sample)\n\n# \u5f97\u5230\u4e86\u6bcf\u4e2a\u50cf\u7d20\u70b9\u7684\u6807\u7b7e\uff0c\u4e5f\u5c31\u662f\u6bcf\u4e2a\u50cf\u7d20\u70b9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\uff080-63\uff09\n# print(labels)\nlabels = kmeans.predict(image_array)\n\n# \u91cd\u6784\u56fe\u7247\ndef recreate_image(codebook, labels, w, h):\n    \"\"\"\u4ececodebook\u548clabels\u6807\u7b7e\u91cd\u65b0\u521b\u5efa\uff08\u538b\u7f29\uff09\u56fe\u50cf\"\"\"\n    # \u5199\u6cd5\u4e00\uff0c\u7b80\u5355\u4f46\u9700\u8981\u7406\u89e3reshape\u548c\u6570\u7ec4\u7684\u7528\u6cd5\n    # -1 \u8868\u793a\u81ea\u52a8\u8ba1\u7b97\u7ef4\u5ea6 -- \u8ba1\u7b97\u51fa\u6765\u7684\u7ed3\u679c\u662f 3\n    return codebook[labels].reshape(w, h, -1)\n    # \u5199\u6cd5\u4e8c\uff0c\u590d\u6742\u4f46\u4fbf\u4e8e\u7406\u89e3\n    # d = codebook.shape[1]\n    # image = np.zeros((w, h, d))# 427, 640, 3\n    # label_idx = 0\n    # for i in range(w):\n    #     for j in range(h):\n    #         image[i][j] = codebook[labels[label_idx]]\n    #         label_idx += 1\n    # return image\n\nplt.figure(2)\nplt.clf()\nplt.axis('off')\nplt.title('Quantized image (64 colors, K-Means)')\nplt.imshow(recreate_image(kmeans.cluster_centers_, labels, w, h))\n\n'''\u968f\u673a\u53d6'''\n# \u6253\u4e71\u6570\u636e\u540e\u53d6\u524d64\u4e2a\u6570\u636e\ncodebook_random = shuffle(image_array, random_state=0)[:n_colors]\n# \u8ba1\u7b97\u4e00\u4e2a\u70b9\u548c\u4e00\u7ec4\u70b9\u4e4b\u95f4\u7684\u6700\u5c0f\u8ddd\u79bb\nlabels_random = pairwise_distances_argmin(codebook_random,\n                                          image_array,\n                                          axis=0)\nplt.figure(3)\nplt.clf()\nplt.axis('off')\nplt.title('Quantized image (64 colors, Random)')\nplt.imshow(recreate_image(codebook_random, labels_random, w, h))\n")))}u.isMDXComponent=!0}}]);