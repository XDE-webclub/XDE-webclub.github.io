"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[3706],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=p(t),d=o,f=c["".concat(u,".").concat(d)]||c[d]||m[d]||i;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l[c]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},4558:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=t(7462),o=(t(7294),t(3905));const i={sidebar_position:18,title:"\u8fdb\u7a0b(\u9009\u4fee)"},a=void 0,l={unversionedId:"\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/\u8fdb\u7a0b",id:"\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/\u8fdb\u7a0b",title:"\u8fdb\u7a0b(\u9009\u4fee)",description:"\u8fdb\u7a0b",source:"@site/docs/\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/\u8fdb\u7a0b.md",sourceDirName:"\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6",slug:"/\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/\u8fdb\u7a0b",permalink:"/course/docs/\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/\u8fdb\u7a0b",draft:!1,tags:[],version:"current",sidebarPosition:18,frontMatter:{sidebar_position:18,title:"\u8fdb\u7a0b(\u9009\u4fee)"},sidebar:"tutorialSidebar",previous:{title:"\u751f\u6210\u5668(\u9009\u4fee)",permalink:"/course/docs/\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/\u751f\u6210\u5668"},next:{title:"\u7ebf\u7a0b(\u9009\u4fee)",permalink:"/course/docs/\u7b2c1\u90e8\u5206Python\u57fa\u7840\u77e5\u8bc6/\u7ebf\u7a0b"}},u={},p=[{value:"\u8fdb\u7a0b",id:"\u8fdb\u7a0b",level:2},{value:"\u591a\u8fdb\u7a0b",id:"\u591a\u8fdb\u7a0b",level:3}],s={toc:p},c="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(c,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u8fdb\u7a0b"},"\u8fdb\u7a0b"),(0,o.kt)("p",null,"\u8fdb\u7a0b\u662f\u7cfb\u7edf\u72ec\u7acb\u5b89\u6392\u548c\u5206\u914d\u7cfb\u7edf\u8d44\u6e90\uff08CPU\u3001\u5185\u5b58\uff09\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u8fdb\u7a0b\u4e3a\u5355\u4f4d\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u6240\u6709\u8fdb\u7a0b\u7684\u6267\u884c\uff0c\u4e3a\u5b83\u4eec\u5408\u7406\u7684\u5206\u914d\u8d44\u6e90\u3002"),(0,o.kt)("p",null,"\u4e00\u4e2a\u8fdb\u7a0b\u5c31\u662fmacOS\u4e2d\u7684\u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d\u3001Windows\u4e2d\u7684\u201c\u4efb\u52a1\u7ba1\u7406\u5668\u201d\u7684\u4e00\u4e2a\u6267\u884c\u7a0b\u5e8f\u3002"),(0,o.kt)("p",null,"Python\u65e2\u652f\u6301\u591a\u8fdb\u7a0b\u53c8\u652f\u6301\u591a\u7ebf\u7a0b\u3002"),(0,o.kt)("h3",{id:"\u591a\u8fdb\u7a0b"},"\u591a\u8fdb\u7a0b"),(0,o.kt)("p",null,"\u8fdb\u7a0b\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0cPython\u4e2d\u7684\u8fdb\u7a0b\u901a\u4fe1\u4e00\u822c\u7531\u8fdb\u7a0b\u5bf9Queue\u5b8c\u6210\u3002"),(0,o.kt)("p",null,"\u8fdb\u7a0b\u7ed5\u8fc7\u4e86\u5168\u5c40\u89e3\u91ca\u5668\u9501\u3002\u56e0\u6b64\uff0c\u591a\u8fdb\u7a0b\u6a21\u5757\u5141\u8bb8\u7a0b\u5e8f\u5458\u5145\u5206\u5229\u7528\u7279\u5b9a\u673a\u5668\u4e0a\u7684\u591a\u4e2a\u5904\u7406\u5668\u3002\u5b83\u5728Unix\u548cWindows\u4e0a\u90fd\u80fd\u8fd0\u884c\u3002"),(0,o.kt)("p",null,"\u8fdb\u7a0b\u7684\u6570\u91cf\u7b49\u4e8eCPU\u6838\u5fc3\u7684\u6570\u91cf\uff0c\u8fd9\u662f\u6700\u6709\u6548\u7684\u3002\u5982\u679c\u6838\u6570\u592a\u591a\uff0c\u5c31\u4e0d\u80fd\u5145\u5206\u5229\u7528\u6838\u6570\u3002\u5982\u679c\u592a\u5c11\uff0c\u4f1a\u9020\u6210\u8fdb\u7a0b\u5207\u6362\uff0c\u589e\u52a0\u7a0b\u5e8f\u7684\u8fd0\u884c\u65f6\u95f4\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docs.python.org/zh-cn/3.10/library/multiprocessing.html?highlight=multiprocessing#module-multiprocessing"},"multiprocessing"),":Multiprocessing Module Code Documentation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from multiprocessing import Pool\n\ndef f(vaule):\n    x = vaule[0]\n    y = vaule[1]\n    return x*y\n\nif __name__ == '__main__':\n    p = Pool(16) # new 16 process pools \uff0c because i have 16 cpu\n    print(p.map(f, [(1,1), (2,2), (3,3)])) # take in data\n    p.close() # close pool\n  \n# [1, 4, 9]\n")),(0,o.kt)("p",null,"\u6211\u4eec\u6765\u5b8c\u62101~100000000\u6c42\u548c\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\uff0c\u5faa\u73af\u89e3\u51b3\uff0c\u6682\u65f6\u4e5f\u4e0d\u8003\u8651\u5217\u8868\u5207\u7247\u64cd\u4f5c\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u53ea\u662f\u628a\u505a\u8fd0\u7b97\u548c\u5408\u5e76\u8fd0\u7b97\u7ed3\u679c\u7684\u65f6\u95f4\u7edf\u8ba1\u51fa\u6765\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from time import time\n\n\ndef main():\n    total = 0\n    number_list = [x for x in range(1, 100000001)]\n    start = time()\n    for number in number_list:\n        total += number\n    print(total)\n    end = time()\n    print('Execution time: %.3fs' % (end - start))\n\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"main() \n# 5000000050000000\n# Execution time: 6.798s\n")),(0,o.kt)("p",null,"\u5229\u7528\u591a\u8fdb\u7a0b\u201c\u5206\u800c\u6cbb\u4e4b\u201d\uff0c"),(0,o.kt)("p",null,"\u5f53\u6211\u4eec\u5c06\u8fd9\u4e2a\u4efb\u52a1\u5206\u89e3\u52308\u4e2a\u8fdb\u7a0b\u4e2d\u53bb\u6267\u884c\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from multiprocessing import Process, Queue\nfrom time import time\n\ncore_num = 8\n\n\ndef task_handler(curr_list, result_queue):\n    total = 0\n    for number in curr_list:\n        total += number\n    result_queue.put(total)\n\n\ndef main():\n    processes = []\n    number_list = [x for x in range(1, 100000001)]\n    result_queue = Queue()\n    index = 0\n    # \u542f\u52a8core_num(8)\u4e2a\u8fdb\u7a0b\u5c06\u6570\u636e\u5207\u7247\u540e\u8fdb\u884c\u8fd0\u7b97\n    index_batch = int(100000000 / core_num)\n    for _ in range(core_num):\n        p = Process(target=task_handler,\n                    args=(number_list[index:index + index_batch], result_queue))\n        index += index_batch\n        processes.append(p)\n        p.start()\n    # \u5f00\u59cb\u8bb0\u5f55\u6240\u6709\u8fdb\u7a0b\u6267\u884c\u5b8c\u6210\u82b1\u8d39\u7684\u65f6\u95f4\n    start = time()\n    for p in processes:\n        p.join()\n    # \u5408\u5e76\u6267\u884c\u7ed3\u679c\n    total = 0\n    while not result_queue.empty():\n        total += result_queue.get()\n    print(total)\n    end = time()\n    print('Execution time: ', (end - start), 's', sep='')\n\n\nif __name__ == '__main__':\n    main()\n\n")),(0,o.kt)("p",null,"\u4ee5\u4e0a\u4ee3\u7801\u4fdd\u5b58\u4e3a multi_process.py"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"!python multi_process.py\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# 5000000050000000\n# Execution time: 0.7936668395996094s\n")),(0,o.kt)("p",null,"\u660e\u663e\uff0c\u591a\u8fdb\u7a0b\u66f4\u5feb\u3002"),(0,o.kt)("p",null,"\u4f7f\u7528\u591a\u8fdb\u7a0b\u540e\u7531\u4e8e\u83b7\u5f97\u4e86\u66f4\u591a\u7684CPU\u6267\u884c\u65f6\u95f4\u4ee5\u53ca\u66f4\u597d\u7684\u5229\u7528\u4e86CPU\u7684\u591a\u6838\u7279\u6027\uff0c\u660e\u663e\u7684\u51cf\u5c11\u4e86\u7a0b\u5e8f\u7684\u6267\u884c\u65f6\u95f4\uff0c\u800c\u4e14\u8ba1\u7b97\u91cf\u8d8a\u5927\u6548\u679c\u8d8a\u660e\u663e\u3002"))}m.isMDXComponent=!0}}]);