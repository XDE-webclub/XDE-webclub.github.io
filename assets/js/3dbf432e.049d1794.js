"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[6875],{3905:(e,n,r)=>{r.d(n,{Zo:()=>c,kt:()=>d});var t=r(7294);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,i=function(e,n){if(null==e)return{};var r,t,i={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(i[r]=e[r]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=t.createContext({}),p=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},c=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var r=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(r),f=i,d=u["".concat(l,".").concat(f)]||u[f]||m[f]||o;return r?t.createElement(d,a(a({ref:n},c),{},{components:r})):t.createElement(d,a({ref:n},c))}));function d(e,n){var r=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=f;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:i,a[1]=s;for(var p=2;p<o;p++)a[p]=r[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9582:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var t=r(7462),i=(r(7294),r(3905));const o={},a=void 0,s={unversionedId:"\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/1K-\u90bb\u8fd1\u7b97\u6cd5",id:"\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/1K-\u90bb\u8fd1\u7b97\u6cd5",title:"1K-\u90bb\u8fd1\u7b97\u6cd5",description:"K-\u90bb\u8fd1\u7b97\u6cd5",source:"@site/docs/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/1K-\u90bb\u8fd1\u7b97\u6cd5.md",sourceDirName:"\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8",slug:"/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/1K-\u90bb\u8fd1\u7b97\u6cd5",permalink:"/course/docs/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/1K-\u90bb\u8fd1\u7b97\u6cd5",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"6re\u6a21\u5757",permalink:"/course/docs/\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/6re\u6a21\u5757"},next:{title:"2K\u5747\u503c\u7b97\u6cd5",permalink:"/course/docs/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/2K\u5747\u503c\u7b97\u6cd5"}},l={},p=[{value:"K-\u90bb\u8fd1\u7b97\u6cd5",id:"k-\u90bb\u8fd1\u7b97\u6cd5",level:2},{value:"\u7b80\u5355\u5b9e\u6218",id:"\u7b80\u5355\u5b9e\u6218",level:3},{value:"\u6548\u679c\u8bc4\u4f30",id:"\u6548\u679c\u8bc4\u4f30",level:3},{value:"\u5bfb\u627e\u6700\u4f73K",id:"\u5bfb\u627e\u6700\u4f73k",level:3}],c={toc:p},u="wrapper";function m(e){let{components:n,...r}=e;return(0,i.kt)(u,(0,t.Z)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"k-\u90bb\u8fd1\u7b97\u6cd5"},"K-\u90bb\u8fd1\u7b97\u6cd5"),(0,i.kt)("p",null,"\u8fd9\u4e2a\u7b97\u6cd5\u65e2\u53ef\u4ee5\u89e3\u51b3\u5206\u7c7b\u95ee\u9898\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u56de\u5f52\u95ee\u9898\uff0c\u4f46\u5de5\u4e1a\u4e0a\u7528\u4e8e\u5206\u7c7b\u7684\u60c5\u51b5\u66f4\u591a\u3002 "),(0,i.kt)("p",null,"KNN\u5148\u8bb0\u5f55\u6240\u6709\u5df2\u77e5\u6570\u636e\uff0c\u518d\u5229\u7528\u4e00\u4e2a\u8ddd\u79bb\u51fd\u6570\uff0c"),(0,i.kt)("p",null,"\u627e\u51fa\u5df2\u77e5\u6570\u636e\u4e2d\u8ddd\u79bb\u672a\u77e5\u4e8b\u4ef6\u6700\u8fd1\u7684K\u7ec4\u6570\u636e\uff0c"),(0,i.kt)("p",null,"\u6700\u540e\u6309\u7167\u8fd9K\u7ec4\u6570\u636e\u91cc\u6700\u5e38\u89c1\u7684\u7c7b\u522b\u9884\u6d4b\u8be5\u4e8b\u4ef6\u3002"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from sklearn.neighbors import KNeighborsClassifier\nimport numpy as np\n\n# \u521b\u5efa\u4e00\u4e9b\u793a\u4f8b\u6570\u636e\nX = np.array([[1, 2], [2, 3], [2, 5], [3, 2], [3, 3], [4, 5]])  # \u7279\u5f81\ny = np.array([0, 0, 1, 0, 1, 1])  # \u76ee\u6807\u6807\u7b7e\n\n# \u521b\u5efaK-\u6700\u8fd1\u90bb\u5206\u7c7b\u5668\nk = 3  # \u9009\u62e9K\u7684\u503c\nmodel = KNeighborsClassifier(n_neighbors=k).fit(X, y)\n\n# \u9884\u6d4b\u65b0\u6570\u636e\u70b9\nnew_data_point = np.array([[3, 4]])  # \u8981\u9884\u6d4b\u7684\u65b0\u6570\u636e\u70b9\npredicted_class = model.predict(new_data_point)\n\nprint("\u9884\u6d4b\u7c7b\u522b:", predicted_class)\n')),(0,i.kt)("h3",{id:"\u7b80\u5355\u5b9e\u6218"},"\u7b80\u5355\u5b9e\u6218"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from sklearn.neighbors import KNeighborsClassifier\nimport numpy as np\nfrom sklearn.model_selection import train_test_split\n\n# \u5bfc\u5165\u9e22\u5c3e\u82b1\u6570\u636e\u5e93\nfrom sklearn.datasets import load_iris\n\n# \u52a0\u8f7d\u6570\u636e\niris = load_iris()\niris_X = iris.data\niris_y = iris.target\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd51\n# print(iris_X[0:2])\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd52\uff0c\u7701\u75650\n# print(iris_X[:2])\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd53\uff0c\u7701\u75650\n# print(iris_X[:2,:])\n\n# # \u83b7\u53d6\u524d2\u6761\u6570\u636e,\u4ece0\u5f00\u59cb\u52302\u7ed3\u675f,\u4e0d\u5305\u62ec2\u3002\u5199\u6cd54\uff0c\u7701\u75650,\u53ea\u53d6\u7b2c\u4e00\u5217\n# print(iris_X[:2,0])\n\n# # \u67e5\u770b\u82b1\u7684\u7c7b\u522b\n# print(iris_y)\n# # \u67e5\u770b\u82b1\u7684\u6570\u636e\n# print(iris_X)\n# # \u5408\u5728\u4e00\u8d77\u67e5\u770b\n# for i in zip(iris_X, iris_y):\n#     print(i)\n\n# \u628a\u6570\u636e\u6253\u4e71\uff0c\u5e76\u5206\u6210\u6d4b\u8bd5\u6570\u636e\u548c\u8bad\u7ec3\u6570\u636e\uff0c\u6d4b\u8bd5\u6570\u636e\u7684\u6bd4\u4f8b\u4e3a30%\nX_train, X_test, y_train, y_test = train_test_split(iris_X, iris_y, test_size=0.3)\n# \u67e5\u770b\u8bad\u7ec3\u6570\u636e\n# print(y_train)\n# \u5b9e\u4f8b\u5316KNN\u5206\u7c7b\u5668\nknn = KNeighborsClassifier()\n# \u8bad\u7ec3\nknn.fit(X_train, y_train)\n# \u67e5\u770b\u5bf9\u6570\u636e\u7684\u9884\u6d4b\nprint(knn.predict(X_test))\n# \u67e5\u770b\u771f\u5b9e\u6570\u636e\nprint(y_test)\n")),(0,i.kt)("h3",{id:"\u6548\u679c\u8bc4\u4f30"},"\u6548\u679c\u8bc4\u4f30"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"right = 0\nerror = 0\nfor i in zip(knn.predict(X_test),y_test):\n    #print(i)\n    if i[0] == i[1]:\n        right +=1\n    else:\n        error +=1\n\nprint('\u6b63\u786e\u7387\uff1a{}%'.format(right/(right+error)*100))\n")),(0,i.kt)("h3",{id:"\u5bfb\u627e\u6700\u4f73k"},"\u5bfb\u627e\u6700\u4f73K"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from sklearn.model_selection import cross_val_score\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neighbors import KNeighborsClassifier\nimport matplotlib.pyplot as plt\nfrom sklearn.datasets import load_iris\n\niris = load_iris()\nX = iris.data\ny = iris.target\n\nk_range = range(1, 31)\nk_scores = []\nfor k in k_range:\n    knn = KNeighborsClassifier(n_neighbors=k)\n##    loss = -cross_val_score(knn, X, y, cv=10, scoring='mean_squared_error') # for regression\n    scores = cross_val_score(knn, X, y, cv=10, scoring='accuracy') # for classification\n    k_scores.append(scores.mean())\n\nplt.plot(k_range, k_scores)\nplt.xlabel('Value of K for KNN')\nplt.ylabel('Cross-Validated Accuracy')\nplt.show()\n")))}m.isMDXComponent=!0}}]);