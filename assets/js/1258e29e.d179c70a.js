"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[8157],{3905:(t,n,e)=>{e.d(n,{Zo:()=>m,kt:()=>y});var a=e(7294);function p(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function l(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function r(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?l(Object(e),!0).forEach((function(n){p(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function i(t,n){if(null==t)return{};var e,a,p=function(t,n){if(null==t)return{};var e,a,p={},l=Object.keys(t);for(a=0;a<l.length;a++)e=l[a],n.indexOf(e)>=0||(p[e]=t[e]);return p}(t,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)e=l[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(p[e]=t[e])}return p}var o=a.createContext({}),s=function(t){var n=a.useContext(o),e=n;return t&&(e="function"==typeof t?t(n):r(r({},n),t)),e},m=function(t){var n=s(t.components);return a.createElement(o.Provider,{value:n},t.children)},c="mdxType",u={inlineCode:"code",wrapper:function(t){var n=t.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(t,n){var e=t.components,p=t.mdxType,l=t.originalType,o=t.parentName,m=i(t,["components","mdxType","originalType","parentName"]),c=s(e),k=p,y=c["".concat(o,".").concat(k)]||c[k]||u[k]||l;return e?a.createElement(y,r(r({ref:n},m),{},{components:e})):a.createElement(y,r({ref:n},m))}));function y(t,n){var e=arguments,p=n&&n.mdxType;if("string"==typeof t||p){var l=e.length,r=new Array(l);r[0]=k;var i={};for(var o in n)hasOwnProperty.call(n,o)&&(i[o]=n[o]);i.originalType=t,i[c]="string"==typeof t?t:p,r[1]=i;for(var s=2;s<l;s++)r[s]=e[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,e)}k.displayName="MDXCreateElement"},137:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=e(7462),p=(e(7294),e(3905));const l={},r="SciPy\u7edf\u8ba1\u5206\u5e03",i={unversionedId:"\u5f15\u8a00/SciPy\u6a21\u5757",id:"\u5f15\u8a00/SciPy\u6a21\u5757",title:"SciPy\u7edf\u8ba1\u5206\u5e03",description:"SciPy\u7684\u7b80\u4ecb",source:"@site/docs/\u5f15\u8a00/SciPy\u6a21\u5757.md",sourceDirName:"\u5f15\u8a00",slug:"/\u5f15\u8a00/SciPy\u6a21\u5757",permalink:"/course/docs/\u5f15\u8a00/SciPy\u6a21\u5757",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Numpy\u6570\u7ec4",permalink:"/course/docs/\u5f15\u8a00/Numpy\u6a21\u5757"},next:{title:"\u6848\u4f8b",permalink:"/course/docs/\u5f15\u8a00/\u6848\u4f8b"}},o={},s=[{value:"SciPy\u7684\u7b80\u4ecb",id:"scipy\u7684\u7b80\u4ecb",level:2},{value:"\u5b50\u6a21\u5757",id:"\u5b50\u6a21\u5757",level:3},{value:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e",id:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e",level:3},{value:"\u7edf\u8ba1\u6a21\u5757\uff1astats",id:"\u7edf\u8ba1\u6a21\u5757stats",level:2},{value:"\u6982\u7387\u5206\u5e03",id:"\u6982\u7387\u5206\u5e03",level:3},{value:"\u5047\u8bbe\u68c0\u9a8c",id:"\u5047\u8bbe\u68c0\u9a8c",level:3},{value:"\u591a\u9879\u5f0f\u62df\u5408\u4f59\u5f26\u51fd\u6570",id:"\u591a\u9879\u5f0f\u62df\u5408\u4f59\u5f26\u51fd\u6570",level:3},{value:"\u6700\u5c0f\u4e8c\u4e58\u62df\u5408",id:"\u6700\u5c0f\u4e8c\u4e58\u62df\u5408",level:3},{value:"Scipy.stats.linregress \u7ebf\u6027\u56de\u5f52",id:"scipystatslinregress-\u7ebf\u6027\u56de\u5f52",level:3},{value:"\u9ad8\u7ea7\u7684\u62df\u5408",id:"\u9ad8\u7ea7\u7684\u62df\u5408",level:3}],m={toc:s},c="wrapper";function u(t){let{components:n,...e}=t;return(0,p.kt)(c,(0,a.Z)({},m,e,{components:n,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"scipy\u7edf\u8ba1\u5206\u5e03"},"SciPy\u7edf\u8ba1\u5206\u5e03"),(0,p.kt)("h2",{id:"scipy\u7684\u7b80\u4ecb"},"SciPy\u7684\u7b80\u4ecb"),(0,p.kt)("p",null,"SciPy\u662f\u5efa\u7acb\u5728\u5728Numpy\u57fa\u7840\u4e0a\u7684\u79d1\u5b66\u8ba1\u7b97\u5e93\uff0c\u63d0\u4f9b\u5927\u91cf\u7684\u79d1\u5b66\u8ba1\u7b97\u652f\u6301\u3002"),(0,p.kt)("p",null,"\u5728\u79d1\u5b66\u8ba1\u7b97\u4e2d\u6211\u4eec\u5f80\u5f80\u4f1a\u7528\u5230\u5982\u4e0b4\u4e2a\u5e38\u7528\u800c\u53c8\u5f3a\u5927\u7684\u529f\u80fd\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u6570\u503c\u4f18\u5316\uff1ascipy.optimize, \u6700\u4f18\u95ee\u9898\u7684\u6570\u503c\u8fd1\u4f3c\u89e3\u95ee\u9898\u80fd\u591f\u5f97\u5230\u6c42\u89e3"),(0,p.kt)("li",{parentName:"ul"},"\u6570\u503c\u79ef\u5206\uff1ascipy.integrate, \u80fd\u591f\u4ece\u6570\u503c\u89d2\u5ea6\u6c42\u89e3\u79ef\u5206\u95ee\u9898\uff0c\u53ef\u4ee5\u5f53\u4f5c\u89e3\u6790\u89e3\u7684\u9a8c\u8bc1\u624b\u6bb5\uff1b\u540c\u65f6\u4e5f\u80fd\u591f\u50cfMatlab\u4e00\u6837\u6c42\u89e3\u5fae\u5206\u65b9\u7a0b"),(0,p.kt)("li",{parentName:"ul"},"\u63d2\u503c\u7b97\u6cd5\uff1ascipy.interpolate, \u91c7\u6837\u7cbe\u5ea6\u8fc7\u4f4e\u65f6\u53ef\u4ee5\u4f7f\u7528interpolate\u5f97\u5230\u8fde\u7eed\u66f2\u7ebf"),(0,p.kt)("li",{parentName:"ul"},"\u4fe1\u53f7\u5904\u7406\uff1ascipy.signal, scipy.fftpack \u6ee4\u6ce2\u5668\u548c\u65f6\u95f4\u5e8f\u5217\u6a21\u578b\u5728\u6570\u5b66\u4e0a\u6709\u5f02\u66f2\u540c\u5de5\u4e4b\u5999\uff0c\u6b64\u5904\u7528\u8fd9\u4e9b\u5e93\u5b9e\u73b0\u4fe1\u53f7\u5904\u7406\u529f\u80fd")),(0,p.kt)("p",null,"SciPy\u7684\u5176\u4ed6\u91cd\u8981\u5185\u5bb9\u4f1a\u5728\u5176\u4ed6\u5185\u5bb9\u4e2d\u53cd\u590d\u63d0\u53ca\uff0c\u6bd4\u5982"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u7ebf\u6027\u4ee3\u6570\uff1ascipy.linalg\u76f4\u63a5\u6620\u5c04\u4e86np.linalg\u7684\u529f\u80fd\uff0c\u5982\u77e9\u9635\u7279\u5f81\u503c\u5206\u89e3\u3001SVD\u5206\u89e3\u3001QR\u5206\u89e3\u7b49\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u7edf\u8ba1\u529f\u80fd\uff1ascipy.stats\u5177\u6709\u5f3a\u5927\u7684\u7edf\u8ba1\u5206\u5e03\u751f\u6210\u3001\u63a2\u7d22\u3001\u68c0\u67e5\u529f\u80fd\uff0c\u5728\u7edf\u8ba1\u5206\u5e03/\u968f\u673a\u6570\u751f\u6210\u90e8\u5206\u4e2d\u7ed3\u5408\u7406\u8bba\u4ecb\u7ecd\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u7a00\u758f\u77e9\u9635\uff1ascipy.sparse\u5728NumPy\u57fa\u7840\u548cNetworkX\u90e8\u5206\u6709\u6240\u63d0\u53ca\uff0c\u5728\u7f51\u7edc\u56fe\u6a21\u578b\u4e2d\u5360\u6709\u4e00\u5e2d\u4e4b\u5730\u3002"),(0,p.kt)("li",{parentName:"ul"},"\u79d1\u5b66\u51fd\u6570\uff1ascipy.special, \u80fd\u591f\u5feb\u901f\u7ed9\u51fa\u4e00\u4e9b\u79d1\u5b66\u51fd\u6570\u7684\u503c\uff08\u5e38\u89c1\u7684\u5982\u8d1d\u585e\u5c14\u51fd\u6570\uff0c\u6392\u5217\u7ec4\u5408\u6570\u7b49\uff09")),(0,p.kt)("h3",{id:"\u5b50\u6a21\u5757"},"\u5b50\u6a21\u5757"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",{parentName:"tr",align:"left"},"\u5b50\u6a21\u5757"),(0,p.kt)("th",{parentName:"tr",align:"left"},"\u63cf\u8ff0"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"cluster"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u805a\u7c7b\u7b97\u6cd5")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"constants"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u7269\u7406\u6570\u5b66\u5e38\u6570")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"fftpack"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"integrate"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u79ef\u5206\u548c\u5e38\u5fae\u5206\u65b9\u7a0b\u6c42\u89e3")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"interpolate"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u63d2\u503c")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"io"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u8f93\u5165\u8f93\u51fa")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"linalg"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u7ebf\u6027\u4ee3\u6570")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"odr"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u6b63\u4ea4\u8ddd\u79bb\u56de\u5f52")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"optimize"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u4f18\u5316\u548c\u6c42\u6839")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"signal"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u4fe1\u53f7\u5904\u7406")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"sparse"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u7a00\u758f\u77e9\u9635")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"spatial"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u7a7a\u95f4\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"special"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u7279\u6b8a\u65b9\u7a0b")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"stats"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u7edf\u8ba1\u5206\u5e03\u548c\u51fd\u6570")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",{parentName:"tr",align:"left"},"weave"),(0,p.kt)("td",{parentName:"tr",align:"left"},"\u8c03\u7528C/C++")))),(0,p.kt)("h3",{id:"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e"},"\u7ed8\u5236\u4e09\u7ef4\u6570\u636e"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# \u9ad8\u7ef4 RBF \u63d2\u503c\n# \u4e09\u7ef4\u6570\u636e\u70b9\uff1a\nx, y = np.mgrid[-np.pi / 2:np.pi / 2:5j, -np.pi / 2:np.pi / 2:5j]\nz = np.cos(np.sqrt(x ** 2 + y ** 2))\nfig = plt.figure(figsize=(12, 6))\nax = fig.add_subplot(projection='3d')\nax.scatter(x, y, z)\nfig.savefig(\"mplot3d.jpg\")\nplt.show()\n")),(0,p.kt)("h2",{id:"\u7edf\u8ba1\u6a21\u5757stats"},"\u7edf\u8ba1\u6a21\u5757\uff1astats"),(0,p.kt)("p",null,"Python \u4e2d\u5e38\u7528\u7684\u7edf\u8ba1\u5de5\u5177\u6709 Numpy, Pandas, PyMC, StatsModels \u7b49\u3002\nScipy \u4e2d\u7684\u5b50\u5e93 scipy.stats \u4e2d\u5305\u542b\u5f88\u591a\u7edf\u8ba1\u4e0a\u7684\u65b9\u6cd5\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# Numpy \u81ea\u5e26\u7b80\u5355\u7684\u7edf\u8ba1\u65b9\u6cd5\uff1a\nheights = np.array([1.46, 1.79, 2.01, 1.75, 1.56, 1.69, 1.88, 1.76, 1.88, 1.78])\nprint('mean,', heights.mean())\nprint('min,', heights.min())\nprint('max', heights.max())\nprint('stand deviation,', heights.std())\n")),(0,p.kt)("p",null,"\u5bfc\u5165 Scipy \u7684\u7edf\u8ba1\u6a21\u5757\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"import scipy.stats.stats as st\n\nprint('mode, ', st.mode(heights))  # \u4f17\u6570\u53ca\u5176\u51fa\u73b0\u6b21\u6570\nprint('skewness, ', st.skew(heights))  # \u504f\u5ea6\nprint('kurtosis, ', st.kurtosis(heights))  # \u5cf0\u5ea6\n")),(0,p.kt)("h3",{id:"\u6982\u7387\u5206\u5e03"},"\u6982\u7387\u5206\u5e03"),(0,p.kt)("p",null,"\u5e38\u89c1\u7684\u8fde\u7eed\u6982\u7387\u5206\u5e03\u6709\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"\u5747\u5300\u5206\u5e03"),(0,p.kt)("li",{parentName:"ul"},"\u6b63\u6001\u5206\u5e03"),(0,p.kt)("li",{parentName:"ul"},"\u5b66\u751ft\u5206\u5e03"),(0,p.kt)("li",{parentName:"ul"},"F\u5206\u5e03"),(0,p.kt)("li",{parentName:"ul"},"Gamma\u5206\u5e03\n..."),(0,p.kt)("li",{parentName:"ul"},"\u79bb\u6563\u6982\u7387\u5206\u5e03\uff1a"),(0,p.kt)("li",{parentName:"ul"},"\u4f2f\u52aa\u5229\u5206\u5e03"),(0,p.kt)("li",{parentName:"ul"},"\u51e0\u4f55\u5206\u5e03\n...")),(0,p.kt)("p",null,"\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u5728 scipy.stats \u4e2d\u627e\u5230\u3002"),(0,p.kt)("p",null,"\u5b83\u5305\u542b\u56db\u7c7b\u5e38\u7528\u7684\u51fd\u6570\uff1a"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"norm.cdf \u8fd4\u56de\u5bf9\u5e94\u7684\u7d2f\u8ba1\u5206\u5e03\u51fd\u6570\u503c")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"norm.pdf \u8fd4\u56de\u5bf9\u5e94\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u503c")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"norm.rvs \u4ea7\u751f\u6307\u5b9a\u53c2\u6570\u7684\u968f\u673a\u53d8\u91cf")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"norm.fit \u8fd4\u56de\u7ed9\u5b9a\u6570\u636e\u4e0b\uff0c\u5404\u53c2\u6570\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\uff08MLE\uff09\u503c"),(0,p.kt)("p",{parentName:"li"},"\u4ece\u6b63\u6001\u5206\u5e03\u4ea7\u751f500\u4e2a\u968f\u673a\u70b9\uff1a"))),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# \u6b63\u6001\u5206\u5e03\nfrom scipy.stats import norm\nx_norm = norm.rvs(size=500)\nx_norm.shape\n")),(0,p.kt)("p",null,"\u76f4\u65b9\u56fe\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"plt.ion() #\u5f00\u542finteractive mode\n\nh = plt.hist(x_norm)\nprint('counts, ', h[0])\nprint('bin centers', h[1])\nfigure = plt.figure(1)  # \u521b\u5efa\u56fe\u88681\nplt.show()\n")),(0,p.kt)("p",null,"\u5f52\u4e00\u5316\u76f4\u65b9\u56fe\uff08\u7528\u51fa\u73b0\u9891\u7387\u4ee3\u66ff\u6b21\u6570\uff09\uff0c\u5c06\u5212\u5206\u533a\u95f4\u53d8\u4e3a 20\uff08\u9ed8\u8ba4 10\uff09\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"h = plt.hist(x_norm, bins=20)\nplt.show()\n")),(0,p.kt)("p",null,"\u5728\u8fd9\u7ec4\u6570\u636e\u4e0b\uff0c\u6b63\u6001\u5206\u5e03\u53c2\u6570\u7684\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u503c\u4e3a\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"x_mean, x_std = norm.fit(x_norm)\n\nprint('mean, ', x_mean)\nprint('x_std, ', x_std)\n")),(0,p.kt)("p",null,"\u5c06\u771f\u5b9e\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e0e\u76f4\u65b9\u56fe\u8fdb\u884c\u6bd4\u8f83\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"h = plt.hist(x_norm, bins=20)\n\nx = np.linspace(-3, 3, 50)\np = plt.plot(x, norm.pdf(x), 'r-')\nplt.show()\n")),(0,p.kt)("p",null,"\u79ef\u5206\u51fd\u6570\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from scipy.integrate import trapz\n\nx1 = np.linspace(-2, 2, 108)\np = trapz(norm.pdf(x1), x1)\nprint('{:.2%} of the values lie between -2 and 2'.format(p))\n\nplt.fill_between(x1, norm.pdf(x1), color='red')\nplt.plot(x, norm.pdf(x), 'k-')\nplt.show()\n")),(0,p.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7 loc \u548c scale \u6765\u8c03\u6574\u8fd9\u4e9b\u53c2\u6570\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u8c03\u7528\u76f8\u5173\u51fd\u6570\u65f6\u8fdb\u884c\u8f93\u5165\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"x = np.linspace(-3, 3, 50)\np = plt.plot(x, norm.pdf(x, loc=0, scale=1))\np = plt.plot(x, norm.pdf(x, loc=0.5, scale=2))\np = plt.plot(x, norm.pdf(x, loc=-0.5, scale=.5))\nplt.show()\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# \u4e0d\u540c\u53c2\u6570\u7684\u5bf9\u6570\u6b63\u6001\u5206\u5e03\uff1a\nfrom scipy.stats import lognorm\n\nx = np.linspace(0.01, 3, 100)\n\nplt.plot(x, lognorm.pdf(x, 1), label='s=1')\nplt.plot(x, lognorm.pdf(x, 2), label='s=2')\nplt.plot(x, lognorm.pdf(x, .1), label='s=0.1')\n\nplt.legend()\nplt.show()\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# \u79bb\u6563\u5206\u5e03\nfrom scipy.stats import randint\n\n# \u79bb\u6563\u5747\u5300\u5206\u5e03\u7684\u6982\u7387\u8d28\u91cf\u51fd\u6570\uff08PMF\uff09\uff1a\nhigh = 10\nlow = -10\n\nx = np.arange(low, high + 1, 0.5)\np = plt.stem(x, randint(low, high).pmf(x))  # \u6746\u72b6\u56fe\nplt.show()\n")),(0,p.kt)("h3",{id:"\u5047\u8bbe\u68c0\u9a8c"},"\u5047\u8bbe\u68c0\u9a8c"),(0,p.kt)("p",null,"\u76f8\u5173\u7684\u51fd\u6570\uff1a"),(0,p.kt)("ol",null,(0,p.kt)("li",{parentName:"ol"},"\u6b63\u6001\u5206\u5e03"),(0,p.kt)("li",{parentName:"ol"},"\u72ec\u7acb\u53cc\u6837\u672c t \u68c0\u9a8c\uff0c\u914d\u5bf9\u6837\u672c t \u68c0\u9a8c\uff0c\u5355\u6837\u672c t \u68c0\u9a8c"),(0,p.kt)("li",{parentName:"ol"},"\u5b66\u751f t \u5206\u5e03")),(0,p.kt)("p",null,"\u5bfc\u5165\u51fd\u6570\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from scipy.stats import norm\nfrom scipy.stats import ttest_ind\n\n# \u72ec\u7acb\u6837\u672c t \u68c0\u9a8c\n# \u4e24\u7ec4\u53c2\u6570\u4e0d\u540c\u7684\u6b63\u6001\u5206\u5e03\uff1a\nn1 = norm(loc=0.3, scale=1.0)\nn2 = norm(loc=0, scale=1.0)\n\n# \u4ece\u5206\u5e03\u4e2d\u4ea7\u751f\u4e24\u7ec4\u968f\u673a\u6837\u672c\uff1a\nn1_samples = n1.rvs(size=100)\nn2_samples = n2.rvs(size=100)\n\n# \u5c06\u4e24\u7ec4\u6837\u672c\u6df7\u5408\u5728\u4e00\u8d77\uff1a\nsamples = np.hstack((n1_samples, n2_samples))\n\n# \u6700\u5927\u4f3c\u7136\u53c2\u6570\u4f30\u8ba1\uff1a\nloc, scale = norm.fit(samples)\nn = norm(loc=loc, scale=scale)\n\n# \u6bd4\u8f83\uff1a\nx = np.linspace(-3, 3, 100)\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"plt.hist([samples, n1_samples, n2_samples])\nplt.plot(x, n.pdf(x), 'b-')\nplt.plot(x, n1.pdf(x), 'g-')\nplt.plot(x, n2.pdf(x), 'r-')\nplt.show()\n")),(0,p.kt)("p",null,"\u72ec\u7acb\u53cc\u6837\u672c t \u68c0\u9a8c\u7684\u76ee\u7684\u5728\u4e8e\u5224\u65ad\u4e24\u7ec4\u6837\u672c\u4e4b\u95f4\u662f\u5426\u6709\u663e\u8457\u5dee\u5f02\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"t_val, p = ttest_ind(n1_samples, n2_samples)\n\nprint('t = {}'.format(t_val))\nprint('p-value = {}'.format(p))\n# t = 0.868384594123\n# p-value = 0.386235148899\n")),(0,p.kt)("p",null,"p \u503c\u5c0f\uff0c\u8bf4\u660e\u8fd9\u4e24\u4e2a\u6837\u672c\u6709\u663e\u8457\u6027\u5dee\u5f02\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"")),(0,p.kt)("p",null,"| ",(0,p.kt)("a",{parentName:"p",href:"https://github.com/shibing624/python-tutorial/blob/master/03_data_science/06_SciPy%E6%9B%B2%E7%BA%BF%E6%8B%9F%E5%90%88.ipynb"},"03_data_science/06_SciPy\u66f2\u7ebf\u62df\u5408.ipynb"),"  | Scipy\u66f2\u7ebf  |",(0,p.kt)("a",{parentName:"p",href:"https://colab.research.google.com/github/shibing624/python-tutorial/blob/master/03_data_science/06_SciPy%E6%9B%B2%E7%BA%BF%E6%8B%9F%E5%90%88.ipynb"},"Open In Colab")," |"),(0,p.kt)("h1",{id:"scipy\u66f2\u7ebf\u62df\u5408"},"SciPy\u66f2\u7ebf\u62df\u5408"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# \u5bfc\u5165\u57fa\u7840\u5305\uff1a\nimport matplotlib.pyplot as plt\nimport numpy as np\n# \u591a\u9879\u5f0f\u62df\u5408\nfrom numpy import polyfit, poly1d\n\n# \u4ea7\u751f\u6570\u636e\uff1a\nx = np.linspace(-5, 5, 100)\ny = 4 * x + 1.5\nnoise_y = y + np.random.randn(y.shape[-1]) * 2.5\n\np = plt.plot(x, noise_y, 'rx')\np = plt.plot(x, y, 'b:')\nplt.show()\n")),(0,p.kt)("p",null,"\u8fdb\u884c\u7ebf\u6027\u62df\u5408\uff0cpolyfit \u662f\u591a\u9879\u5f0f\u62df\u5408\u51fd\u6570\uff0c\u7ebf\u6027\u62df\u5408\u5373\u4e00\u9636\u591a\u9879\u5f0f\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"coeff = polyfit(x, noise_y, 1)\ncoeff\n")),(0,p.kt)("p",null,"\u4e00\u9636\u591a\u9879\u5f0f y=a1x+a0y=a1x+a0 \u62df\u5408\uff0c\u8fd4\u56de\u4e24\u4e2a\u7cfb\u6570 ","[a1,a0][a1,a0]","\u3002"),(0,p.kt)("p",null,"\u753b\u51fa\u62df\u5408\u66f2\u7ebf\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"p = plt.plot(x, noise_y, 'rx')\np = plt.plot(x, coeff[0] * x + coeff[1], 'k-')\np = plt.plot(x, y, 'b--')\nplt.show()\n")),(0,p.kt)("h3",{id:"\u591a\u9879\u5f0f\u62df\u5408\u4f59\u5f26\u51fd\u6570"},"\u591a\u9879\u5f0f\u62df\u5408\u4f59\u5f26\u51fd\u6570"),(0,p.kt)("p",null,"\u4f59\u5f26\u51fd\u6570\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"x = np.linspace(-np.pi, np.pi, 100)\ny = np.cos(x)\n\n# \u7528\u4e00\u9636\u5230\u4e5d\u9636\u591a\u9879\u5f0f\u62df\u5408\uff0c\u7c7b\u4f3c\u6cf0\u52d2\u5c55\u5f00\uff1a\n# \u53ef\u4ee5\u7528 poly1d \u751f\u6210\u4e00\u4e2a\u4ee5\u4f20\u5165\u7684 coeff \u4e3a\u53c2\u6570\u7684\u591a\u9879\u5f0f\u51fd\u6570\uff1a\ny1 = poly1d(polyfit(x, y, 1))\ny3 = poly1d(polyfit(x, y, 3))\ny5 = poly1d(polyfit(x, y, 5))\ny7 = poly1d(polyfit(x, y, 7))\ny9 = poly1d(polyfit(x, y, 9))\nx = np.linspace(-3 * np.pi, 3 * np.pi, 100)\n\np = plt.plot(x, np.cos(x), 'k')  # \u9ed1\u8272\u4f59\u5f26\np = plt.plot(x, y1(x))\np = plt.plot(x, y3(x))\np = plt.plot(x, y5(x))\np = plt.plot(x, y7(x))\np = plt.plot(x, y9(x))\n\na = plt.axis([-3 * np.pi, 3 * np.pi, -1.25, 1.25])\nplt.show()\n")),(0,p.kt)("p",null,"\u9ed1\u8272\u4e3a\u539f\u59cb\u7684\u56fe\u5f62\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u968f\u7740\u591a\u9879\u5f0f\u62df\u5408\u7684\u9636\u6570\u7684\u589e\u52a0\uff0c\n\u66f2\u7ebf\u4e0e\u62df\u5408\u6570\u636e\u7684\u543b\u5408\u7a0b\u5ea6\u5728\u9010\u6e10\u589e\u5927\u3002"),(0,p.kt)("h3",{id:"\u6700\u5c0f\u4e8c\u4e58\u62df\u5408"},"\u6700\u5c0f\u4e8c\u4e58\u62df\u5408"),(0,p.kt)("p",null,"\u5bfc\u5165\u76f8\u5173\u7684\u6a21\u5757\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from scipy.stats import linregress\n\nx = np.linspace(0, 5, 100)\ny = 0.5 * x + np.random.randn(x.shape[-1]) * 0.35\n\nplt.plot(x, y, 'x')\nplt.show()\n")),(0,p.kt)("p",null,"Scipy.linalg.lstsq \u6700\u5c0f\u4e8c\u4e58\u89e3"),(0,p.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528 scipy.linalg.lstsq \u6c42\u6700\u5c0f\u4e8c\u4e58\u89e3\u3002"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"X = np.hstack((x[:, np.newaxis], np.ones((x.shape[-1], 1))))\nprint(X[1:5])\n\n# \u6c42\u89e3\uff1a\nfrom scipy.linalg import lstsq\nC, resid, rank, s = lstsq(X, y)\nprint(C, resid, rank, s)\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'# \u753b\u56fe\uff1a\np = plt.plot(x, y, \'rx\')\np = plt.plot(x, C[0] * x + C[1], \'k--\')\nplt.show()\n\nprint("sum squared residual = {:.3f}".format(resid))\nprint("rank of the X matrix = {}".format(rank))\nprint("singular values of X = {}".format(s))\n')),(0,p.kt)("h3",{id:"scipystatslinregress-\u7ebf\u6027\u56de\u5f52"},"Scipy.stats.linregress \u7ebf\u6027\u56de\u5f52"),(0,p.kt)("p",null,"\u5bf9\u4e8e\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u56de\u5f52\u8fdb\u884c\u6c42\u89e3\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'slope, intercept, r_value, p_value, stderr = linregress(x, y)\np = plt.plot(x, y, \'rx\')\np = plt.plot(x, slope * x + intercept, \'k--\')\nplt.show()\n\nprint("R-value = {:.3f}".format(r_value))\nprint("p-value (probability there is no correlation) = {:.3e}".format(p_value))\nprint("Root mean squared error of the fit = {:.3f}".format(np.sqrt(stderr)))\n')),(0,p.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u4e24\u8005\u6c42\u89e3\u7684\u7ed3\u679c\u662f\u4e00\u81f4\u7684\uff0c\u4f46\u662f\u51fa\u53d1\u7684\u89d2\u5ea6\u662f\u4e0d\u540c\u7684\u3002"),(0,p.kt)("h3",{id:"\u9ad8\u7ea7\u7684\u62df\u5408"},"\u9ad8\u7ea7\u7684\u62df\u5408"),(0,p.kt)("p",null,"\u5148\u5b9a\u4e49\u8fd9\u4e2a\u975e\u7ebf\u6027\u51fd\u6570\uff1ay=ae^(\u2212bsin(fx+\u03d5))"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'def function(x, a, b, f, phi):\n    """a function of x with four parameters"""\n    result = a * np.exp(-b * np.sin(f * x + phi))\n    return result\n\n\n# \u753b\u51fa\u539f\u59cb\u66f2\u7ebf\uff1a\nx = np.linspace(0, 2 * np.pi, 50)\nactual_parameters = [3, 2, 1.25, np.pi / 4]\ny = function(x, *actual_parameters)\np = plt.plot(x, y)\nplt.show()\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"# \u52a0\u5165\u566a\u58f0\uff1a\nfrom scipy.stats import norm\n\ny_noisy = y + 0.8 * norm.rvs(size=len(x))\np = plt.plot(x, y, 'k-')\np = plt.plot(x, y_noisy, 'rx')\nplt.show()\n")),(0,p.kt)("p",null,"\u9ad8\u7ea7\u7684\u505a\u6cd5\uff1a"),(0,p.kt)("p",null,"\u4e0d\u9700\u8981\u5b9a\u4e49\u8bef\u5dee\u51fd\u6570\uff0c\u76f4\u63a5\u4f20\u5165 function \u4f5c\u4e3a\u53c2\u6570\uff1a"),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"from scipy.optimize import curve_fit\n\np_est, err_est = curve_fit(function, x, y_noisy)\np_est\n")),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'p = plt.plot(x, y_noisy, "rx")\np = plt.plot(x, function(x, *p_est), "g--")\nplt.show()\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},'# \u8fd9\u91cc curve_fit \u7b2c\u4e00\u4e2a\u8fd4\u56de\u7684\u662f\u51fd\u6570\u7684\u53c2\u6570\uff0c\u7b2c\u4e8c\u4e2a\u8fd4\u56de\u503c\u4e3a\u5404\u4e2a\u53c2\u6570\u7684\u534f\u65b9\u5dee\u77e9\u9635\uff1a\nprint(p_est)\nprint(err_est)\n\n# \u534f\u65b9\u5dee\u77e9\u9635\u7684\u5bf9\u89d2\u7ebf\u4e3a\u5404\u4e2a\u53c2\u6570\u7684\u65b9\u5dee\uff1a\nprint("normalized relative errors for each parameter")\nprint("   a\\t    b\\t    f\\t    phi")\nprint(np.sqrt(err_est.diagonal()) / p_est)\n')),(0,p.kt)("pre",null,(0,p.kt)("code",{parentName:"pre",className:"language-python"},"")))}u.isMDXComponent=!0}}]);