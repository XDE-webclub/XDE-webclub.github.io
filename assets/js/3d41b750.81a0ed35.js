"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[5204],{3905:(e,a,n)=>{n.d(a,{Zo:()=>u,kt:()=>c});var t=n(7294);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function p(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,l=function(e,a){if(null==e)return{};var n,t,l={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=t.createContext({}),s=function(e){var a=t.useContext(d),n=a;return e&&(n="function"==typeof e?e(a):p(p({},a),e)),n},u=function(e){var a=s(e.components);return t.createElement(d.Provider,{value:a},e.children)},o="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},k=t.forwardRef((function(e,a){var n=e.components,l=e.mdxType,r=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),o=s(n),k=l,c=o["".concat(d,".").concat(k)]||o[k]||m[k]||r;return n?t.createElement(c,p(p({ref:a},u),{},{components:n})):t.createElement(c,p({ref:a},u))}));function c(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=n.length,p=new Array(r);p[0]=k;var i={};for(var d in a)hasOwnProperty.call(a,d)&&(i[d]=a[d]);i.originalType=e,i[o]="string"==typeof e?e:l,p[1]=i;for(var s=2;s<r;s++)p[s]=n[s];return t.createElement.apply(null,p)}return t.createElement.apply(null,n)}k.displayName="MDXCreateElement"},87:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>p,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var t=n(7462),l=(n(7294),n(3905));const r={},p=void 0,i={unversionedId:"\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/3pandas\u6a21\u5757",id:"\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/3pandas\u6a21\u5757",title:"3pandas\u6a21\u5757",description:"Pandas\u662fPython\u7684\u4e00\u4e2a\u7528\u4e8e\u6570\u636e\u5206\u6790\u7684\u5e93\uff1a",source:"@site/docs/\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/3pandas\u6a21\u5757.md",sourceDirName:"\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)",slug:"/\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/3pandas\u6a21\u5757",permalink:"/course/docs/\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/3pandas\u6a21\u5757",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"2Matpoltlib\u6a21\u5757",permalink:"/course/docs/\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/2Matpoltlib\u6a21\u5757"},next:{title:"4SciPy\u6a21\u5757",permalink:"/course/docs/\u7b2c3\u90e8\u5206\u6570\u636e\u79d1\u5b66\u5165\u95e8(\u6574\u7406\u4e2d)/4SciPy\u6a21\u5757"}},d={},s=[{value:"\u4e3a\u5565\u7528Pandas?",id:"\u4e3a\u5565\u7528pandas",level:2},{value:"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e",id:"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e",level:3},{value:"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e",id:"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e",level:3},{value:"\u5feb\u901f\u8fc7\u6ee4",id:"\u5feb\u901f\u8fc7\u6ee4",level:3},{value:"\u5feb\u901f\u5207\u7247",id:"\u5feb\u901f\u5207\u7247",level:3},{value:"\u5feb\u901f\u7edf\u8ba1",id:"\u5feb\u901f\u7edf\u8ba1",level:3},{value:"\u5feb\u901f\u201cMapReduce\u201d",id:"\u5feb\u901fmapreduce",level:3},{value:"1.1 Series\uff1apandas\u7684\u957f\u67aa(\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c,\u89c2\u6d4b\u5411\u91cf,\u4e00\u7ef4\u6570\u7ec4...)",id:"11-seriespandas\u7684\u957f\u67aa\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c\u89c2\u6d4b\u5411\u91cf\u4e00\u7ef4\u6570\u7ec4",level:3},{value:"Series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cNumPy",id:"series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cnumpy",level:4},{value:"\u5f53\u7136\u4e5f\u652f\u6301Broadcasting",id:"\u5f53\u7136\u4e5f\u652f\u6301broadcasting",level:4},{value:"\u4ee5\u53caUniversal Function",id:"\u4ee5\u53cauniversal-function",level:4},{value:"1.2 DataFrame\uff1apandas\u7684\u6218\u9524(\u6570\u636e\u8868\uff0c\u4e8c\u7ef4\u6570\u7ec4)",id:"12-dataframepandas\u7684\u6218\u9524\u6570\u636e\u8868\u4e8c\u7ef4\u6570\u7ec4",level:3},{value:"\u4eceNumpy\u4e8c\u7ef4\u6570\u7ec4\u3001\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\uff1a\u6570\u636e\u867d\u597d\uff0c\u52ff\u5fd8\u5217\u540d",id:"\u4ecenumpy\u4e8c\u7ef4\u6570\u7ec4\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\u6570\u636e\u867d\u597d\u52ff\u5fd8\u5217\u540d",level:4},{value:"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91cc\uff08JSON\uff09\uff1a\u5f88\u4e0d\u5e78\uff0c\u5b57\u5178key\u662f\u65e0\u5e8f\u7684",id:"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91ccjson\u5f88\u4e0d\u5e78\u5b57\u5178key\u662f\u65e0\u5e8f\u7684",level:4},{value:"\u4ece\u53e6\u4e00\u4e2aDataFrame\u5b9a\u4e49DataFrame\uff1a\u554a\uff0c\u5f3a\u8feb\u75c7\u72af\u4e86",id:"\u4ece\u53e6\u4e00\u4e2adataframe\u5b9a\u4e49dataframe\u554a\u5f3a\u8feb\u75c7\u72af\u4e86",level:4},{value:"\u4eceDataFrame\u4e2d\u53d6\u51fa\u5217\uff1f\u4e24\u79cd\u65b9\u6cd5\uff08\u4e0eJavaScript\u5b8c\u5168\u4e00\u81f4\uff01\uff09",id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u5217\u4e24\u79cd\u65b9\u6cd5\u4e0ejavascript\u5b8c\u5168\u4e00\u81f4",level:4},{value:"\u4eceDataFrame\u4e2d\u53d6\u51fa\u884c\uff1f\uff08\u81f3\u5c11\uff09\u4e24\u79cd\u65b9\u6cd5",id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u884c\u81f3\u5c11\u4e24\u79cd\u65b9\u6cd5",level:4},{value:"\u50cfNumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0f\uff1ailoc",id:"\u50cfnumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0filoc",level:4},{value:"\u542c\u8bf4\u4f60\u4eceTable\u5730\u72f1\u6765\uff0c\u5927\u718a\u732b\u7b11\u4e86",id:"\u542c\u8bf4\u4f60\u4ecetable\u5730\u72f1\u6765\u5927\u718a\u732b\u7b11\u4e86",level:4},{value:"1.3 Index\uff1apandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\uff08\u884c\u7ea7\u7d22\u5f15\uff09",id:"13-indexpandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\u884c\u7ea7\u7d22\u5f15",level:3},{value:"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\uff0c\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684Series\u4e00\u6837",id:"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684series\u4e00\u6837",level:4},{value:"Immutable\uff0c\u7262\u8bb0",id:"immutable\u7262\u8bb0",level:4},{value:"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684List\uff0c\u5c31\u6709\u4e86MultiIndex",id:"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684list\u5c31\u6709\u4e86multiindex",level:4},{value:"\u5bf9\u4e8eSeries\u6765\u8bf4\uff0c\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdIndex\uff0c\u6570\u636e\uff0c\u53d8\u5f62",id:"\u5bf9\u4e8eseries\u6765\u8bf4\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdindex\u6570\u636e\u53d8\u5f62",level:4},{value:"DateTime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\uff0c\u4f60\u503c\u5f97\u62e5\u6709",id:"datetime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\u4f60\u503c\u5f97\u62e5\u6709",level:4},{value:"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\uff0c\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd",id:"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd",level:4},{value:"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362\uff1f",id:"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362",level:4},{value:"\u6700\u540e\u7684\u6700\u540e\uff0c\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a\uff1f",id:"\u6700\u540e\u7684\u6700\u540e\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a",level:4},{value:"\u7c97\u7c92\u5ea6\u6570\u636e\uff0breindex\uff0bffill/bfill",id:"\u7c97\u7c92\u5ea6\u6570\u636ereindexffillbfill",level:4},{value:"\u5173\u4e8e\u7d22\u5f15\uff0c\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709\uff1f",id:"\u5173\u4e8e\u7d22\u5f15\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709",level:4},{value:"2.1 \u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa",id:"21-\u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa",level:3},{value:"2.1.x Excel ... ?",id:"21x-excel--",level:3},{value:"2.2 \u534a\u7ed3\u6784\u5316\u6570\u636e",id:"22-\u534a\u7ed3\u6784\u5316\u6570\u636e",level:3},{value:"3.1 \u6570\u636e\u6574\u5408\uff1a\u65b9\u4fbf\u7075\u6d3b",id:"31-\u6570\u636e\u6574\u5408\u65b9\u4fbf\u7075\u6d3b",level:3},{value:"3.1.1 \u6a2a\u5411\u62fc\u63a5\uff1a\u76f4\u63a5DataFrame",id:"311-\u6a2a\u5411\u62fc\u63a5\u76f4\u63a5dataframe",level:3},{value:"3.1.2 \u6a2a\u5411\u62fc\u63a5\uff1aConcatenate",id:"312-\u6a2a\u5411\u62fc\u63a5concatenate",level:3},{value:"3.1.3 \u7eb5\u5411\u62fc\u63a5\uff1aMerge",id:"313-\u7eb5\u5411\u62fc\u63a5merge",level:3},{value:"3.2 \u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2",id:"32-\u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2",level:3},{value:"map: \u4ee5\u76f8\u540c\u89c4\u5219\u5c06\u4e00\u5217\u6570\u636e\u4f5c\u4e00\u4e2a\u6620\u5c04\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u76f8\u540c\u51fd\u6570\u7684\u5904\u7406",id:"map-\u4ee5\u76f8\u540c\u89c4\u5219\u5c06\u4e00\u5217\u6570\u636e\u4f5c\u4e00\u4e2a\u6620\u5c04\u4e5f\u5c31\u662f\u8fdb\u884c\u76f8\u540c\u51fd\u6570\u7684\u5904\u7406",level:3},{value:"\u7c7b\u4f3c\u7684\u529f\u80fd\u8fd8\u6709applymap\uff0c\u53ef\u4ee5\u5bf9\u4e00\u4e2adataframe\u91cc\u9762\u6bcf\u4e00\u4e2a\u5143\u7d20\u50cfmap\u90a3\u6837\u5168\u5c40\u64cd\u4f5c",id:"\u7c7b\u4f3c\u7684\u529f\u80fd\u8fd8\u6709applymap\u53ef\u4ee5\u5bf9\u4e00\u4e2adataframe\u91cc\u9762\u6bcf\u4e00\u4e2a\u5143\u7d20\u50cfmap\u90a3\u6837\u5168\u5c40\u64cd\u4f5c",level:3},{value:"apply\u5219\u53ef\u4ee5\u5bf9\u4e00\u4e2aDataFrame\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2aSeries",id:"apply\u5219\u53ef\u4ee5\u5bf9\u4e00\u4e2adataframe\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2aseries",level:3},{value:"3.3 \u6570\u636e\u6392\u5e8f",id:"33-\u6570\u636e\u6392\u5e8f",level:3},{value:"3.4 \u7f3a\u5931\u6570\u636e\u5904\u7406",id:"34-\u7f3a\u5931\u6570\u636e\u5904\u7406",level:3},{value:"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c",id:"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c",level:4},{value:"\u4ea7\u751f MultiIndex\uff08\u591a\u5217\u5206\u7ec4\uff09\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c",id:"\u4ea7\u751f-multiindex\u591a\u5217\u5206\u7ec4\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c",level:4}],u={toc:s},o="wrapper";function m(e){let{components:a,...n}=e;return(0,l.kt)(o,(0,t.Z)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Pandas\u662fPython\u7684\u4e00\u4e2a\u7528\u4e8e\u6570\u636e\u5206\u6790\u7684\u5e93\uff1a ",(0,l.kt)("a",{parentName:"p",href:"http://pandas.pydata.org"},"http://pandas.pydata.org")),(0,l.kt)("p",null,"API\u901f\u67e5\uff1a",(0,l.kt)("a",{parentName:"p",href:"http://pandas.pydata.org/pandas-docs/stable/api.html"},"http://pandas.pydata.org/pandas-docs/stable/api.html")),(0,l.kt)("p",null,"\u57fa\u4e8eNumPy,SciPy\u7684\u529f\u80fd\uff0c\u5728\u5176\u4e0a\u8865\u5145\u4e86\u5927\u91cf\u7684\u6570\u636e\u64cd\u4f5c\uff08Data Manipulation\uff09\u529f\u80fd\u3002"),(0,l.kt)("p",null,"\u7edf\u8ba1\u3001\u5206\u7ec4\u3001\u6392\u5e8f\u3001\u900f\u89c6\u8868\u81ea\u7531\u8f6c\u6362\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u5f88\u719f\u6089\u7ed3\u6784\u5316\u6570\u636e\u5e93\uff08RDBMS\uff09\u4e0eExcel\u7684\u529f\u80fd\uff0c\u5c31\u4f1a\u77e5\u9053Pandas\u6709\u8fc7\u4e4b\u800c\u65e0\u4e0d\u53ca\uff01"),(0,l.kt)("h2",{id:"\u4e3a\u5565\u7528pandas"},"\u4e3a\u5565\u7528Pandas?"),(0,l.kt)("p",null,"\u666e\u901a\u7684\u7a0b\u5e8f\u5458\u770b\u5230\u4e00\u4efd\u6570\u636e\u4f1a\u600e\u4e48\u505a\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"iris_file = '../data/numpy/iris.data.txt'\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"with open(iris_file, 'r', encoding='utf-8') as f:\n    lines = f.readlines()\n\nfor idx, line in enumerate(lines):\n    print(line)\n    if idx == 10:\n        break\n")),(0,l.kt)("p",null,"Pandas\u7684\u610f\u4e49\u5c31\u5728\u4e8e"),(0,l.kt)("h3",{id:"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e"},"\u5feb\u901f\u7684\u8bc6\u522b\u7ed3\u6784\u5316\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nimport scipy as sp\nimport pandas as pd\n\ndata = pd.read_csv(iris_file, header=None, encoding='utf-8')\ndata\n")),(0,l.kt)("h3",{id:"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e"},"\u5feb\u901f\u7684\u64cd\u4f5c\u5143\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"cnames = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'class']\ndata.columns = cnames\ndata\n")),(0,l.kt)("h3",{id:"\u5feb\u901f\u8fc7\u6ee4"},"\u5feb\u901f\u8fc7\u6ee4"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data[data['petal_width'] == data.petal_width.max()]\n")),(0,l.kt)("h3",{id:"\u5feb\u901f\u5207\u7247"},"\u5feb\u901f\u5207\u7247"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data.iloc[::30, :2]\n")),(0,l.kt)("h3",{id:"\u5feb\u901f\u7edf\u8ba1"},"\u5feb\u901f\u7edf\u8ba1"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data['class'].value_counts()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for x in range(4):\n    s = data.iloc[:,x]\n    print('{0:<12}'.format(s.name), \" Statistics: \",\n    '{0:>5}  {1:>5}  {2:>5}  {3:>5}'.format(s.max(), s.min(), round(s.mean(),2),round(s.std(),2)))\n")),(0,l.kt)("h3",{id:"\u5feb\u901fmapreduce"},"\u5feb\u901f\u201cMapReduce\u201d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"slogs = lambda x:np.log(x)*x\nentpy = lambda x:np.exp((slogs(x.sum())-x.map(slogs).sum())/x.sum())\ndata.groupby('class').agg(entpy)\n")),(0,l.kt)("h1",{id:"1-pandas\u5927\u718a\u732b\u57fa\u7840"},"1. Pandas(\u5927\u718a\u732b)\u57fa\u7840"),(0,l.kt)("p",null,"Pandas\u7684\u91cd\u8981\u6570\u636e\u7c7b\u578b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"DataFrame(\u4e8c\u7ef4\u8868)"),(0,l.kt)("li",{parentName:"ul"},"Series(\u4e00\u7ef4\u5e8f\u5217)"),(0,l.kt)("li",{parentName:"ul"},"Index(\u884c\u7d22\u5f15\uff0c\u884c\u7ea7\u5143\u6570\u636e)")),(0,l.kt)("h3",{id:"11-seriespandas\u7684\u957f\u67aa\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c\u89c2\u6d4b\u5411\u91cf\u4e00\u7ef4\u6570\u7ec4"},"1.1 Series\uff1apandas\u7684\u957f\u67aa(\u6570\u636e\u8868\u4e2d\u7684\u4e00\u5217\u6216\u4e00\u884c,\u89c2\u6d4b\u5411\u91cf,\u4e00\u7ef4\u6570\u7ec4...)"),(0,l.kt)("p",null,"\u6570\u636e\u4e16\u754c\u4e2d\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u4e2a\u4f53\u7684\u5168\u9762\u89c2\u6d4b\uff0c\u6216\u8005\u5bf9\u4e8e\u4efb\u610f\u4e00\u7ec4\u4e2a\u4f53\u67d0\u4e00\u5c5e\u6027\u7684\u89c2\u6d4b\uff0c\u5168\u90e8\u53ef\u4ee5\u62bd\u8c61\u4e3aSeries\u7684\u6982\u5ff5\u3002"),(0,l.kt)("p",null,"\u7528\u503c\u6784\u5efa\u4e00\u4e2aSeries\uff1a"),(0,l.kt)("p",null,"\u7531\u9ed8\u8ba4index\u548cvalues\u7ec4\u6210\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1 = pd.Series(np.random.randn(4))\nseries1\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(type(series1))\nprint(series1.index)\nprint(series1.values)\n")),(0,l.kt)("h4",{id:"series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cnumpy"},"Series\u652f\u6301\u8fc7\u6ee4\u7684\u539f\u7406\u5c31\u5982\u540cNumPy"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1 > 0\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1[series1 > 0]\n")),(0,l.kt)("h4",{id:"\u5f53\u7136\u4e5f\u652f\u6301broadcasting"},"\u5f53\u7136\u4e5f\u652f\u6301Broadcasting"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1*2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1+5\n")),(0,l.kt)("h4",{id:"\u4ee5\u53cauniversal-function"},"\u4ee5\u53caUniversal Function"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(series1)\nprint(np.exp(series1))\n\n#NumPy Universal Function\nf_np = np.frompyfunc(lambda x:np.exp(x*2 + 5), 1, 1)\nf_np(series1)\n")),(0,l.kt)("p",null,"\u5728\u5e8f\u5217\u4e0a\u5c31\u4f7f\u7528\u884c\u6807\uff0c\u800c\u4e0d\u662f\u521b\u5efa\u4e00\u4e2a2\u5217\u7684\u6570\u636e\u8868\uff0c\u80fd\u591f\u8f7b\u677e\u8fa8\u522b\u54ea\u91cc\u662f\u6570\u636e\uff0c\u54ea\u91cc\u662f\u5143\u6570\u636e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series2 = pd.Series(series1.values, index=['norm_' + str(i) for i in range(4)])\nprint(series2, type(series2))\nprint(series2.index)\nprint(type(series2.index))\nprint(series2.values)\nseries2\n")),(0,l.kt)("p",null,"\u867d\u7136\u884c\u662f\u6709\u987a\u5e8f\u7684\uff0c\u4f46\u662f\u4ecd\u7136\u80fd\u591f\u901a\u8fc7\u884c\u7ea7\u7684index\u6765\u8bbf\u95ee\u5230\u6570\u636e\uff1a"),(0,l.kt)("p",null,"\uff08\u5f53\u7136\u4e5f\u4e0d\u5c3d\u7136\u50cfOrdered Dict\uff0c\u56e0\u4e3a\u884c\u7d22\u5f15\u751a\u81f3\u53ef\u4ee5\u91cd\u590d\uff0c\u4e0d\u63a8\u8350\u91cd\u590d\u7684\u884c\u7d22\u5f15\u4e0d\u4ee3\u8868\u4e0d\u80fd\u7528\uff09"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series2[['norm_0','norm_3']]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"'norm_0' in series2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"'norm_6' in series2\n")),(0,l.kt)("p",null,"\u9ed8\u8ba4\u884c\u7d22\u5f15\u5c31\u50cf\u884c\u53f7\u4e00\u6837\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series1.index\n")),(0,l.kt)("p",null,"\u4eceKey\u4e0d\u91cd\u590d\u7684Ordered Dict\u6216\u8005\u4eceDict\u6765\u5b9a\u4e49Series\u5c31\u4e0d\u9700\u8981\u62c5\u5fc3\u884c\u7d22\u5f15\u91cd\u590d\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'s_dict = {"Japan":"Tokyo", "Korea":"Seoul", "China":"Beijing"}\nseries3 = pd.Series(s_dict)\n\nprint(series3.index)\nprint(series3.values)\nseries3\n')),(0,l.kt)("p",null,"\u4e0eDict\u533a\u522b\u4e00\uff1a \u6709\u5e8f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'lst = ["Japan", "China", "Singapore", "Korea"]\nseries4 = pd.Series(s_dict, index =lst)\nseries4\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(series4.values)\nprint(series4.index)\nprint(series4.isnull())\nprint(series4.notnull())\n")),(0,l.kt)("p",null,"\u4e0eDict\u533a\u522b\u4e8c\uff1a index\u5185\u503c\u53ef\u4ee5\u91cd\u590d\uff0c\u5c3d\u7ba1\u4e0d\u63a8\u8350\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"lst = ['A', 'B', 'B', 'C']\nseries5 = pd.Series(series1.values, index=lst)\nseries5\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series5[['B', 'A']]\n")),(0,l.kt)("p",null,"\u6574\u4e2a\u5e8f\u5217\u7ea7\u522b\u7684\u5143\u6570\u636e\u4fe1\u606f\uff1aname"),(0,l.kt)("p",null,"\u5f53\u6570\u636e\u5e8f\u5217\u4ee5\u53caindex\u672c\u8eab\u6709\u4e86\u540d\u5b57\uff0c\u5c31\u53ef\u4ee5\u66f4\u65b9\u4fbf\u7684\u8fdb\u884c\u540e\u7eed\u7684\u6570\u636e\u5173\u8054\u5566\uff01"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series4.name\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"series4.index.name\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'series4.name = "Capital Series"\nseries4.index.name = "Nation"\nseries4\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.DataFrame(series4)\n")),(0,l.kt)("h3",{id:"12-dataframepandas\u7684\u6218\u9524\u6570\u636e\u8868\u4e8c\u7ef4\u6570\u7ec4"},"1.2 DataFrame\uff1apandas\u7684\u6218\u9524(\u6570\u636e\u8868\uff0c\u4e8c\u7ef4\u6570\u7ec4)"),(0,l.kt)("p",null,"Series\u7684\u6709\u5e8f\u96c6\u5408\uff0c\u5c31\u50cfR\u7684DataFrame\u4e00\u6837\u65b9\u4fbf\u3002"),(0,l.kt)("p",null,"\u4ed4\u7ec6\u60f3\u60f3\uff0c\u7edd\u5927\u90e8\u5206\u7684\u6570\u636e\u5f62\u5f0f\u90fd\u53ef\u4ee5\u8868\u73b0\u4e3aDataFrame\u3002"),(0,l.kt)("h4",{id:"\u4ecenumpy\u4e8c\u7ef4\u6570\u7ec4\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\u6570\u636e\u867d\u597d\u52ff\u5fd8\u5217\u540d"},"\u4eceNumpy\u4e8c\u7ef4\u6570\u7ec4\u3001\u4ece\u6587\u4ef6\u6216\u8005\u4ece\u6570\u636e\u5e93\u5b9a\u4e49\uff1a\u6570\u636e\u867d\u597d\uff0c\u52ff\u5fd8\u5217\u540d"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_np = np.asarray([('Japan', 'Tokyo', 4000),\n                      ('Korea', 'Seoul', 1300),\n                      ('China', 'Beijing', 9100)])\ndf1 = pd.DataFrame(data_np, columns=['nation','capital','GDP'])\ndf1\n")),(0,l.kt)("h4",{id:"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91ccjson\u5f88\u4e0d\u5e78\u5b57\u5178key\u662f\u65e0\u5e8f\u7684"},"\u7b49\u957f\u7684\u5217\u6570\u636e\u4fdd\u5b58\u5728\u4e00\u4e2a\u5b57\u5178\u91cc\uff08JSON\uff09\uff1a\u5f88\u4e0d\u5e78\uff0c\u5b57\u5178key\u662f\u65e0\u5e8f\u7684"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_dict = {'nation': ['Japan', 'Korea', 'China'],\n             'capital': ['Tokyo', 'Seoul', 'Beijing'],\n             'GDP': [4900, 1300, 9100]}\ndf2 = pd.DataFrame(data_dict)\ndf2\n")),(0,l.kt)("h4",{id:"\u4ece\u53e6\u4e00\u4e2adataframe\u5b9a\u4e49dataframe\u554a\u5f3a\u8feb\u75c7\u72af\u4e86"},"\u4ece\u53e6\u4e00\u4e2aDataFrame\u5b9a\u4e49DataFrame\uff1a\u554a\uff0c\u5f3a\u8feb\u75c7\u72af\u4e86"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df21 = pd.DataFrame(df2, columns=['nation', 'capital', 'GDP'])\ndf21\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22 = pd.DataFrame(df2, columns=['nation', 'capital', 'GDP'], index = [2, 0, 1])\ndf22\n")),(0,l.kt)("h4",{id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u5217\u4e24\u79cd\u65b9\u6cd5\u4e0ejavascript\u5b8c\u5168\u4e00\u81f4"},"\u4eceDataFrame\u4e2d\u53d6\u51fa\u5217\uff1f\u4e24\u79cd\u65b9\u6cd5\uff08\u4e0eJavaScript\u5b8c\u5168\u4e00\u81f4\uff01\uff09"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"'.'\u7684\u5199\u6cd5\u5bb9\u6613\u4e0e\u5176\u4ed6\u9884\u7559\u5173\u952e\u5b57\u4ea7\u751f\u51b2\u7a81"),(0,l.kt)("li",{parentName:"ul"},"'","[ ]","'\u7684\u5199\u6cd5\u6700\u5b89\u5168\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print(df22.nation)\nprint(df22.capital)\nprint(df22['GDP'])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22['capital']\n")),(0,l.kt)("h4",{id:"\u4ecedataframe\u4e2d\u53d6\u51fa\u884c\u81f3\u5c11\u4e24\u79cd\u65b9\u6cd5"},"\u4eceDataFrame\u4e2d\u53d6\u51fa\u884c\uff1f\uff08\u81f3\u5c11\uff09\u4e24\u79cd\u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22[0:1] # \u7ed9\u51fa\u7684\u5b9e\u9645\u662fDataFrame\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22.iloc[0] # \u901a\u8fc7\u5bf9\u5e94Index\u7ed9\u51fa\u884c\n")),(0,l.kt)("h4",{id:"\u50cfnumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0filoc"},"\u50cfNumpy\u5207\u7247\u4e00\u6837\u7684\u7ec8\u6781\u62db\u5f0f\uff1ailoc"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22.iloc[0,:]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22.iloc[:,0]\n")),(0,l.kt)("h4",{id:"\u542c\u8bf4\u4f60\u4ecetable\u5730\u72f1\u6765\u5927\u718a\u732b\u7b11\u4e86"},"\u542c\u8bf4\u4f60\u4eceTable\u5730\u72f1\u6765\uff0c\u5927\u718a\u732b\u7b11\u4e86"),(0,l.kt)("p",null,'\u7136\u800c\u52a8\u6001\u589e\u52a0\u5217\u65e0\u6cd5\u7528"."\u7684\u65b9\u5f0f\u5b8c\u6210\uff0c\u53ea\u80fd\u7528"',"[ ]",'"'),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df22['population'] = [1600, 130, 55]\ndf22['region'] = 'East_Asian'\ndf22\n")),(0,l.kt)("h3",{id:"13-indexpandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\u884c\u7ea7\u7d22\u5f15"},"1.3 Index\uff1apandas\u8fdb\u884c\u6570\u636e\u64cd\u4f5c\u7684\u9b3c\u724c\uff08\u884c\u7ea7\u7d22\u5f15\uff09"),(0,l.kt)("p",null,"\u884c\u7ea7\u7d22\u5f15\u662f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5143\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u80fd\u7531\u771f\u5b9e\u6570\u636e\u4ea7\u751f\uff0c\u56e0\u6b64\u53ef\u4ee5\u89c6\u4f5c\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u7531\u591a\u91cd\u7d22\u5f15\u4e5f\u5c31\u662f\u591a\u4e2a\u5217\u7ec4\u5408\u800c\u6210"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u548c\u5217\u540d\u8fdb\u884c\u4ea4\u6362\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5806\u53e0\u548c\u5c55\u5f00\uff0c\u8fbe\u5230Excel\u900f\u89c6\u8868\u6548\u679c")),(0,l.kt)("p",null,"Index\u6709\u56db\u79cd...\u54e6\u4e0d\uff0c\u5f88\u591a\u79cd\u5199\u6cd5\uff0c\u4e00\u4e9b\u91cd\u8981\u7684\u7d22\u5f15\u7c7b\u578b\u5305\u62ec"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"pd.Index\uff08\u666e\u901a\uff09"),(0,l.kt)("li",{parentName:"ul"},"Int64Index\uff08\u6570\u503c\u578b\u7d22\u5f15\uff09"),(0,l.kt)("li",{parentName:"ul"},"MultiIndex\uff08\u591a\u91cd\u7d22\u5f15\uff0c\u5728\u6570\u636e\u64cd\u7eb5\u4e2d\u66f4\u8be6\u7ec6\u63cf\u8ff0\uff09"),(0,l.kt)("li",{parentName:"ul"},"DatetimeIndex\uff08\u4ee5\u65f6\u95f4\u683c\u5f0f\u4f5c\u4e3a\u7d22\u5f15\uff09"),(0,l.kt)("li",{parentName:"ul"},"PeriodIndex \uff08\u542b\u5468\u671f\u7684\u65f6\u95f4\u683c\u5f0f\u4f5c\u4e3a\u7d22\u5f15\uff09")),(0,l.kt)("h4",{id:"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684series\u4e00\u6837"},"\u76f4\u63a5\u5b9a\u4e49\u666e\u901a\u7d22\u5f15\uff0c\u957f\u5f97\u5c31\u548c\u666e\u901a\u7684Series\u4e00\u6837"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"index_names = ['a','b','c']\ns = pd.Series(index_names)\nprint(pd.Index(index_names))\nprint(pd.Index(s))\ns\n")),(0,l.kt)("h4",{id:"immutable\u7262\u8bb0"},"Immutable\uff0c\u7262\u8bb0"),(0,l.kt)("p",null,"pd.Index\u662f\u4e0d\u53ef\u53d8\u7684"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"index_names = ['a', 'b', 'c']\nindex0 = pd.Index(index_names)\nprint(index0.values)\n# index0[2] = 'd' # \u6539\u53d8\u503c\u4f1a\u51fa\u9519\n")),(0,l.kt)("h4",{id:"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684list\u5c31\u6709\u4e86multiindex"},"\u6254\u8fdb\u53bb\u4e00\u4e2a\u542b\u6709\u591a\u5143\u7ec4\u7684List\uff0c\u5c31\u6709\u4e86MultiIndex"),(0,l.kt)("p",null,"MyltiIndex \u4e5f\u662fimmutable\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"multi1 = pd.Index([['Row_' + str(x + 1), 'Col_' + str(y + 1)] for x in range(4) for y in range(4)])\nmulti1.name = ('index1', 'index2')\nmulti1\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"multi2 = pd.Index([('Row_' + str(x + 1), 'Col_' + str(y + 1)) for x in range(4) for y in range(4)])\nmulti2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# multi2.name = ['index1', 'index2'] # \u51fa\u9519\n")),(0,l.kt)("h4",{id:"\u5bf9\u4e8eseries\u6765\u8bf4\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdindex\u6570\u636e\u53d8\u5f62"},"\u5bf9\u4e8eSeries\u6765\u8bf4\uff0c\u5982\u679c\u62e5\u6709\u4e86\u591a\u91cdIndex\uff0c\u6570\u636e\uff0c\u53d8\u5f62"),(0,l.kt)("p",null,"\u4e0b\u5217\u4ee3\u7801\u8bf4\u660e\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4e8c\u91cdMultiIndex\u7684Series\u53ef\u4ee5unstack()\u6210DataFrame"),(0,l.kt)("li",{parentName:"ul"},"DataFrame\u53ef\u4ee5stack\u6210\u62e5\u6709\u4e8c\u91cdMultiIndex\u7684Series")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi1 = pd.Series(range(0, 16), index=multi2)\ndata_for_multi1\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi1.unstack()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi1.unstack().stack()\n")),(0,l.kt)("p",null,"\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u975e\u5e73\u8861\u6570\u636e\u7684\u4f8b\u5b50\uff1a"),(0,l.kt)("p",null,"Row_1,2,3,4\u548cCol_1,2,3,4\u5e76\u4e0d\u662f\u5168\u7ec4\u5408\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"multi2 = pd.Index([('Row_' + str(x), 'Col_' + str(y + 1)) for x in range(5) for y in range(x)])\nmulti2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi2 = pd.Series(np.arange(10), index=multi2)\ndata_for_multi2\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi2.unstack()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_for_multi2.unstack().stack()\n")),(0,l.kt)("h4",{id:"datetime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\u4f60\u503c\u5f97\u62e5\u6709"},"DateTime\u6807\u51c6\u5e93\u5982\u6b64\u597d\u7528\uff0c\u4f60\u503c\u5f97\u62e5\u6709"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import datetime\ndates = [datetime.datetime(2021, 1, 1), datetime.datetime(2021, 1, 8), datetime.datetime(2021, 1, 30)]\npd.DatetimeIndex(dates)\n")),(0,l.kt)("h4",{id:"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd"},"\u5982\u679c\u4f60\u4e0d\u4ec5\u9700\u8981\u65f6\u95f4\u683c\u5f0f\u7edf\u4e00\uff0c\u65f6\u95f4\u9891\u7387\u4e5f\u8981\u7edf\u4e00\u7684\u8bdd"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex1 = pd.period_range('2021-01', '2021-04', freq='M')\nperiodindex1\n")),(0,l.kt)("h4",{id:"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362"},"\u6708\u7ea7\u7cbe\u5ea6\u548c\u65e5\u7ea7\u7cbe\u5ea6\u5982\u4f55\u8f6c\u6362\uff1f"),(0,l.kt)("p",null,"\u6709\u7684\u516c\u53f8\u7edf\u4e00\u4ee51\u53f7\u4ee3\u8868\u5f53\u6708\uff0c\u6709\u7684\u516c\u53f8\u7edf\u4e00\u4ee5\u6700\u540e\u4e00\u5929\u4ee3\u8868\u5f53\u6708\uff0c\u8f6c\u5316\u8d77\u6765\u5f88\u9ebb\u70e6\uff0c\u53ef\u4ee5asfreq"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex1.asfreq('D', how='start')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex1.asfreq('D', how='end')\n")),(0,l.kt)("h4",{id:"\u6700\u540e\u7684\u6700\u540e\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a"},"\u6700\u540e\u7684\u6700\u540e\uff0c\u6211\u8981\u771f\u6b63\u628a\u4e24\u79cd\u9891\u7387\u7684\u65f6\u95f4\u7cbe\u5ea6\u5339\u914d\u4e0a\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex_mon = pd.period_range('2021-01', '2021-03', freq='M').asfreq('D', how='start')\nperiodindex_day = pd.period_range('2021-01-01', '2021-03-01', freq='D')\n\nperiodindex_mon\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"periodindex_day\n")),(0,l.kt)("h4",{id:"\u7c97\u7c92\u5ea6\u6570\u636ereindexffillbfill"},"\u7c97\u7c92\u5ea6\u6570\u636e\uff0breindex\uff0bffill/bfill"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"full_ts = pd.Series(periodindex_mon, index=periodindex_mon).reindex(periodindex_day)\nfull_ts.head()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"full_ts = pd.Series(periodindex_mon, index=periodindex_mon).reindex(periodindex_day, method='ffill')\nfull_ts.head()\n")),(0,l.kt)("h4",{id:"\u5173\u4e8e\u7d22\u5f15\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709"},"\u5173\u4e8e\u7d22\u5f15\uff0c\u65b9\u4fbf\u7684\u64cd\u4f5c\u6709\uff1f"),(0,l.kt)("p",null,"\u524d\u9762\u63cf\u8ff0\u8fc7\u4e86\uff0c\u7d22\u5f15\u6709\u5e8f\uff0c\u91cd\u590d\uff0c\u4f46\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53c8\u80fd\u901a\u8fc7key\u6765\u8bbf\u95ee\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u67d0\u4e9b\u96c6\u5408\u64cd\u4f5c\u90fd\u662f\u53ef\u4ee5\u652f\u6301\u7684\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"index1 = pd.Index(['A', 'B', 'B', 'C', 'C'])\nindex2 = pd.Index(['C', 'D', 'E', 'E', 'F'])\nindex3 = pd.Index(['B', 'C', 'A'])\nprint(index1.append(index2))\nprint(index1.difference(index2))\nprint(index1.intersection(index2))\nprint(index1.union(index2)) # Support unique-value Index well\nprint(index1.isin(index2))\nprint(index1.delete(2))\nprint(index1.insert(0, 'K')) # Not suggested\nprint(index3.drop('A')) # Support unique-value Index well\nprint(index1.is_monotonic, index2.is_monotonic, index3.is_monotonic)\nprint(index1.is_unique, index2.is_unique, index3.is_unique)\n")),(0,l.kt)("h1",{id:"2-pandas\u7684io"},"2. Pandas\u7684I/O"),(0,l.kt)("p",null,"\u8001\u751f\u5e38\u8c08\uff0c\u4ece\u57fa\u7840\u6765\u770b\uff0c\u6211\u4eec\u4ecd\u7136\u5173\u5fc3pandas\u5bf9\u4e8e\u4e0e\u5916\u90e8\u6570\u636e\u662f\u5982\u4f55\u4ea4\u4e92\u7684\u3002"),(0,l.kt)("h3",{id:"21-\u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa"},"2.1 \u7ed3\u6784\u5316\u6570\u636e\u8f93\u5165\u8f93\u51fa"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"read_csv\u4e0eto_csv \u662f\u4e00\u5bf9\u8f93\u5165\u8f93\u51fa\u7684\u5de5\u5177\uff0cread_csv\u76f4\u63a5\u8fd4\u56depandas.DataFrame\uff0c\u800cto_csv\u53ea\u8981\u6267\u884c\u547d\u4ee4\u5373\u53ef\u5199\u6587\u4ef6",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"read_table\uff1a\u529f\u80fd\u7c7b\u4f3c"),(0,l.kt)("li",{parentName:"ul"},"read_fwf\uff1a\u64cd\u4f5cfixed width file"))),(0,l.kt)("li",{parentName:"ul"},"read_excel\u4e0eto_excel\u65b9\u4fbf\u7684\u4e0eexcel\u4ea4\u4e92")),(0,l.kt)("p",null,"\u8fd8\u8bb0\u5f97\u521a\u5f00\u59cb\u7684\u4f8b\u5b50\u5417\uff1f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"header \u8868\u793a\u6570\u636e\u4e2d\u662f\u5426\u5b58\u5728\u5217\u540d\uff0c\u5982\u679c\u5728\u7b2c0\u884c\u5c31\u5199\u5c31\u51990\uff0c\u5e76\u4e14\u5f00\u59cb\u8bfb\u6570\u636e\u65f6\u8df3\u8fc7\u76f8\u5e94\u7684\u884c\u6570\uff0c\u4e0d\u5b58\u5728\u53ef\u4ee5\u5199none"),(0,l.kt)("li",{parentName:"ul"},"names \u8868\u793a\u8981\u7528\u7ed9\u5b9a\u7684\u5217\u540d\u6765\u4f5c\u4e3a\u6700\u7ec8\u7684\u5217\u540d"),(0,l.kt)("li",{parentName:"ul"},"encoding \u8868\u793a\u6570\u636e\u96c6\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u901a\u5e38\u800c\u8a00\u4e00\u4efd\u6570\u636e\u4e3a\u4e86\u65b9\u4fbf\u7684\u8fdb\u884c\u6587\u4ef6\u4f20\u8f93\u90fd\u4ee5utf-8\u4f5c\u4e3a\u6807\u51c6")),(0,l.kt)("p",null,"\u63d0\u95ee\uff1a\u4e0b\u5217\u4f8b\u5b50\u4e2d\uff0cheader=4\uff0cnames=cnames\u65f6\uff0c\u7a76\u7adf\u4f1a\u8bfb\u5230\u600e\u6837\u7684\u6570\u636e\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"print('cnames:', cnames)\nirisdata = pd.read_csv(iris_file, header=None, names=cnames, encoding='utf-8')\nirisdata[::30]\n")),(0,l.kt)("p",null,"\u5e0c\u671b\u4e86\u89e3\u5168\u90e8\u53c2\u6570\u7684\u8bf7\u79fb\u6b65API\uff1a"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html#pandas.read_csv"},"http://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html#pandas.read_csv")),(0,l.kt)("p",null,"\u8fd9\u91cc\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u53c2\u6570\uff1a"),(0,l.kt)("p",null,"\u8bfb\u53d6\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"skiprows\uff1a\u8df3\u8fc7\u4e00\u5b9a\u7684\u884c\u6570"),(0,l.kt)("li",{parentName:"ul"},"nrows\uff1a\u4ec5\u8bfb\u53d6\u4e00\u5b9a\u7684\u884c\u6570"),(0,l.kt)("li",{parentName:"ul"},"skipfooter\uff1a\u5c3e\u90e8\u6709\u56fa\u5b9a\u7684\u884c\u6570\u6c38\u4e0d\u8bfb\u53d6"),(0,l.kt)("li",{parentName:"ul"},"skip_blank_lines\uff1a\u7a7a\u884c\u8df3\u8fc7")),(0,l.kt)("p",null,"\u5185\u5bb9\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"sep/delimiter\uff1a\u5206\u9694\u7b26\u5f88\u91cd\u8981\uff0c\u5e38\u89c1\u7684\u6709\u9017\u53f7\uff0c\u7a7a\u683c\u548cTab('\\t')"),(0,l.kt)("li",{parentName:"ul"},"na_values\uff1a\u6307\u5b9a\u5e94\u8be5\u88ab\u5f53\u4f5cna_values\u7684\u6570\u503c"),(0,l.kt)("li",{parentName:"ul"},"thousands\uff1a\u5904\u7406\u6570\u503c\u7c7b\u578b\u65f6\uff0c\u6bcf\u5343\u4f4d\u5206\u9694\u7b26\u5e76\u4e0d\u7edf\u4e00 (1.234.567,89\u6216\u80051,234,567.89\u90fd\u53ef\u80fd)\uff0c\u6b64\u65f6\u8981\u628a\u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a\u6570\u5b57\u9700\u8981\u6307\u660e\u5343\u4f4d\u5206\u9694\u7b26")),(0,l.kt)("p",null,"\u6536\u5c3e\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"index_col\uff1a\u5c06\u771f\u5b9e\u7684\u67d0\u5217\uff08\u5217\u7684\u6570\u76ee\uff0c\u751a\u81f3\u5217\u540d\uff09\u5f53\u4f5cindex"),(0,l.kt)("li",{parentName:"ul"},"squeeze\uff1a\u4ec5\u8bfb\u5230\u4e00\u5217\u65f6\uff0c\u4e0d\u518d\u4fdd\u5b58\u4e3apandas.DataFrame\u800c\u662fpandas.Series")),(0,l.kt)("h3",{id:"21x-excel--"},"2.1.x Excel ... ?"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u5b58\u50a8\u7740\u6781\u4e3a\u89c4\u6574\u6570\u636e\u7684Excel\u800c\u8a00\uff0c\u5176\u5b9e\u662f\u6ca1\u5fc5\u8981\u4e00\u5b9a\u7528Excel\u6765\u5b58\uff0c\u5c3d\u7ba1Pandas\u4e5f\u5341\u5206\u53cb\u597d\u7684\u63d0\u4f9b\u4e86I/O\u63a5\u53e3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"iris_excel_file = 'irisdata.xls'\nirisdata.to_excel(iris_excel_file, index=None)\nirisdata_from_excel = pd.read_excel(iris_excel_file, header=0)\nirisdata_from_excel[::30]\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import os\nos.remove(iris_excel_file)\n")),(0,l.kt)("p",null,"\u552f\u4e00\u91cd\u8981\u7684\u53c2\u6570\uff1asheetname=k\uff0c\u6807\u5fd7\u7740\u4e00\u4e2aexcel\u7684\u7b2ck\u4e2asheet\u9875\u5c06\u4f1a\u88ab\u53d6\u51fa\u3002\uff08\u4ece0\u5f00\u59cb\uff09"),(0,l.kt)("h3",{id:"22-\u534a\u7ed3\u6784\u5316\u6570\u636e"},"2.2 \u534a\u7ed3\u6784\u5316\u6570\u636e"),(0,l.kt)("p",null,"JSON\uff1a\u7f51\u7edc\u4f20\u8f93\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u6570\u636e\u683c\u5f0f\u3002"),(0,l.kt)("p",null,"\u4ed4\u7ec6\u770b\u4e00\u4e0b\uff0c\u5b9e\u9645\u4e0a\u8fd9\u5c31\u662f\u6211\u4eec\u5e73\u65f6\u6536\u96c6\u5230\u5f02\u6e90\u6570\u636e\u7684\u98ce\u683c\u662f\u4e00\u81f4\u7684\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5217\u540d\u4e0d\u80fd\u5b8c\u5168\u5339\u914d"),(0,l.kt)("li",{parentName:"ul"},"\u5173\u8054\u952e\u53ef\u80fd\u5e76\u4e0d\u552f\u4e00"),(0,l.kt)("li",{parentName:"ul"},"\u5143\u6570\u636e\u88ab\u4fdd\u5b58\u5728\u6570\u636e\u91cc")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import json\njson_data = [{'name': 'Wang', 'sal': 50000, 'job': 'VP'},\n             {'name': 'Zhang', 'job': 'Manager', 'report': 'VP'},\n             {'name': 'Li', 'sal': 5000, 'report': 'Manager'}]\ndata_employee = pd.read_json(json.dumps(json_data))\ndata_employee_ri = data_employee.reindex(columns=['name', 'job', 'sal', 'report'])\ndata_employee_ri\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")),(0,l.kt)("p",null,"| ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/shibing624/python-tutorial/blob/master/03_data_science/08_Pandas%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.ipynb"},"03_data_science/08_Pandas\u6570\u636e\u64cd\u4f5c.ipynb"),"  | Pandas\u64cd\u4f5c  |",(0,l.kt)("a",{parentName:"p",href:"https://colab.research.google.com/github/shibing624/python-tutorial/blob/master/03_data_science/08_Pandas%E6%95%B0%E6%8D%AE%E6%93%8D%E4%BD%9C.ipynb"},"Open In Colab")," |"),(0,l.kt)("h1",{id:"3-pandas\u6570\u636e\u64cd\u4f5c"},"3. Pandas\u6570\u636e\u64cd\u4f5c"),(0,l.kt)("p",null,"\u5728\u7b2c\u4e00\u90e8\u5206\u7684\u57fa\u7840\u4e0a\uff0c\u6570\u636e\u4f1a\u6709\u66f4\u591a\u79cd\u64cd\u4f5c\u65b9\u5f0f\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u901a\u8fc7\u5217\u540d\u3001\u884cindex\u6765\u53d6\u6570\u636e\uff0c\u7ed3\u5408ix\u3001iloc\u7075\u6d3b\u7684\u83b7\u53d6\u6570\u636e\u7684\u4e00\u4e2a\u5b50\u96c6\uff08\u7b2c\u4e00\u90e8\u5206\u5df2\u7ecf\u4ecb\u7ecd\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u6309\u8bb0\u5f55\u62fc\u63a5\uff08\u5c31\u50cfUnion All\uff09\u6216\u8005\u5173\u8054\uff08join\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u65b9\u4fbf\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u6620\u5c04"),(0,l.kt)("li",{parentName:"ul"},"\u6392\u5e8f"),(0,l.kt)("li",{parentName:"ul"},"\u7f3a\u5931\u503c\u5904\u7406"),(0,l.kt)("li",{parentName:"ul"},"\u4e0eExcel\u4e00\u6837\u7075\u6d3b\u7684\u6570\u636e\u900f\u89c6\u8868\uff08\u5728\u7b2c\u56db\u90e8\u5206\u66f4\u8be6\u7ec6\u4ecb\u7ecd\uff09")),(0,l.kt)("h3",{id:"31-\u6570\u636e\u6574\u5408\u65b9\u4fbf\u7075\u6d3b"},"3.1 \u6570\u636e\u6574\u5408\uff1a\u65b9\u4fbf\u7075\u6d3b"),(0,l.kt)("h3",{id:"311-\u6a2a\u5411\u62fc\u63a5\u76f4\u63a5dataframe"},"3.1.1 \u6a2a\u5411\u62fc\u63a5\uff1a\u76f4\u63a5DataFrame"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import numpy as np\nimport pandas as pd\npd.DataFrame([np.random.rand(2), np.random.rand(2), np.random.rand(2)], columns=['C1', 'C2'])\n")),(0,l.kt)("h3",{id:"312-\u6a2a\u5411\u62fc\u63a5concatenate"},"3.1.2 \u6a2a\u5411\u62fc\u63a5\uff1aConcatenate"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import json\njson_data = [{'name': 'Wang', 'sal': 50000, 'job': 'VP'},\n             {'name': 'Zhang', 'job': 'Manager', 'report': 'VP'},\n             {'name': 'Li', 'sal': 5000, 'report': 'Manager'}]\ndata_employee = pd.read_json(json.dumps(json_data))\ndata_employee_ri = data_employee.reindex(columns=['name', 'job', 'sal', 'report'])\n\npd.concat([data_employee_ri, data_employee_ri, data_employee_ri])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.concat([data_employee_ri, data_employee_ri, data_employee_ri],ignore_index=True)\n")),(0,l.kt)("h3",{id:"313-\u7eb5\u5411\u62fc\u63a5merge"},"3.1.3 \u7eb5\u5411\u62fc\u63a5\uff1aMerge"),(0,l.kt)("p",null,"\u6839\u636e\u6570\u636e\u5217\u5173\u8054\uff0c\u4f7f\u7528on\u5173\u952e\u5b57"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u6307\u5b9a\u4e00\u5217\u6216\u591a\u5217"),(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u4f7f\u7528left_on\u548cright_on")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(data_employee_ri, data_employee_ri, on='name')\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(data_employee_ri, data_employee_ri, on=['name', 'job'])\n")),(0,l.kt)("p",null,"\u6839\u636eindex\u5173\u8054\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528left_index\u548cright_index"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_employee_ri.index.name = 'index1'\npd.merge(data_employee_ri, data_employee_ri, left_index=True, right_index=True)\n")),(0,l.kt)("p",null,"TIPS: \u589e\u52a0how\u5173\u952e\u5b57\uff0c\u5e76\u6307\u5b9a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"how = 'inner'"),(0,l.kt)("li",{parentName:"ul"},"how = 'left'"),(0,l.kt)("li",{parentName:"ul"},"how = 'right'"),(0,l.kt)("li",{parentName:"ul"},"how = 'outer'")),(0,l.kt)("p",null,"\u7ed3\u5408how\uff0c\u53ef\u4ee5\u770b\u5230merge\u57fa\u672c\u518d\u73b0\u4e86SQL\u5e94\u6709\u7684\u529f\u80fd\uff0c\u5e76\u4fdd\u6301\u4ee3\u7801\u6574\u6d01\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df31_a = pd.DataFrame({'name':['\u8001\u738b', '\u8001\u5f20', '\u8001\u674e'], 'sal':[5000, 3000, 1000]})\ndf31_a\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df31_b = pd.DataFrame({'name':['\u8001\u738b', '\u8001\u5218'], 'job':['VP', 'Manager']})\ndf31_b\n")),(0,l.kt)("p",null,"how='left': \u4fdd\u7559\u5de6\u8868\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='left')\n")),(0,l.kt)("p",null,"how='right': \u4fdd\u7559\u53f3\u8868\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='right')\n")),(0,l.kt)("p",null,"how='inner': \u4fdd\u7559\u4e24\u8868\u4ea4\u96c6\u4fe1\u606f\uff0c\u8fd9\u6837\u5c3d\u91cf\u907f\u514d\u51fa\u73b0\u7f3a\u5931\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='inner')\n")),(0,l.kt)("p",null,"how='outer': \u4fdd\u7559\u4e24\u8868\u5e76\u96c6\u4fe1\u606f\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4\u7f3a\u5931\u503c\uff0c\u4f46\u6700\u5927\u7a0b\u5ea6\u7684\u6574\u5408\u4e86\u5df2\u6709\u4fe1\u606f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.merge(df31_a, df31_b, on='name', how='outer')\n")),(0,l.kt)("h3",{id:"32-\u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2"},"3.2 \u6570\u636e\u6e05\u6d17\u4e09\u5251\u5ba2"),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u7684\u4e09\u4e2a\u529f\u80fd\uff0c",(0,l.kt)("strong",{parentName:"p"},"map"),",",(0,l.kt)("strong",{parentName:"p"},"applymap"),",",(0,l.kt)("strong",{parentName:"p"},"apply"),",\u529f\u80fd\uff0c\u662f\u7edd\u5927\u591a\u6570\u6570\u636e\u5206\u6790\u5e08\u5728\u6570\u636e\u6e05\u6d17\u8fd9\u4e00\u6b65\u9aa4\u4e2d\u7684\u5fc5\u7ecf\u4e4b\u8def\u3002"),(0,l.kt)("p",null,"\u4ed6\u4eec\u5206\u522b\u56de\u7b54\u4e86\u4ee5\u4e0b\u95ee\u9898\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6211\u60f3\u6839\u636e\u4e00\u5217\u6570\u636e\u65b0\u505a\u4e00\u5217\u6570\u636e\uff0c\u600e\u4e48\u529e\uff1f\uff08Series->Series\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u60f3\u6839\u636e\u6574\u5f20\u8868\u7684\u6570\u636e\u65b0\u505a\u6574\u5f20\u8868\uff0c\u600e\u4e48\u529e\uff1f \uff08DataFrame->DataFrame\uff09"),(0,l.kt)("li",{parentName:"ul"},"\u6211\u60f3\u6839\u636e\u5f88\u591a\u5217\u7684\u6570\u636e\u65b0\u505a\u4e00\u5217\u6570\u636e\uff0c\u600e\u4e48\u529e\uff1f \uff08DataFrame->Series\uff09")),(0,l.kt)("p",null,"\u4e0d\u8981\u518d\u5199\u4ec0\u4e48for\u5faa\u73af\u4e86\uff01\u6539\u53d8\u601d\u7ef4\uff0c\u63d0\u9ad8\u7f16\u7801\u548c\u6267\u884c\u6548\u7387"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_np = np.asarray([('Japan', 'Tokyo', 4000),\n                      ('Korea', 'Seoul', 1300),\n                      ('China', 'Beijing', 9100)])\ndf32 = pd.DataFrame(data_np, columns=['nation', 'capital', 'GDP'])\ndf32\n")),(0,l.kt)("h3",{id:"map-\u4ee5\u76f8\u540c\u89c4\u5219\u5c06\u4e00\u5217\u6570\u636e\u4f5c\u4e00\u4e2a\u6620\u5c04\u4e5f\u5c31\u662f\u8fdb\u884c\u76f8\u540c\u51fd\u6570\u7684\u5904\u7406"},"map: \u4ee5\u76f8\u540c\u89c4\u5219\u5c06\u4e00\u5217\u6570\u636e\u4f5c\u4e00\u4e2a\u6620\u5c04\uff0c\u4e5f\u5c31\u662f\u8fdb\u884c\u76f8\u540c\u51fd\u6570\u7684\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def GDP_Factorize(v):\n    fv = np.float64(v)\n    if fv > 6000.0:\n        return 'High'\n    elif fv < 2000.0:\n        return 'Low'\n    else:\n        return 'Medium'\n\ndf32['GDP_Level'] = df32['GDP'].map(GDP_Factorize)\ndf32['NATION'] = df32.nation.map(str.upper)\ndf32\n")),(0,l.kt)("h3",{id:"\u7c7b\u4f3c\u7684\u529f\u80fd\u8fd8\u6709applymap\u53ef\u4ee5\u5bf9\u4e00\u4e2adataframe\u91cc\u9762\u6bcf\u4e00\u4e2a\u5143\u7d20\u50cfmap\u90a3\u6837\u5168\u5c40\u64cd\u4f5c"},"\u7c7b\u4f3c\u7684\u529f\u80fd\u8fd8\u6709applymap\uff0c\u53ef\u4ee5\u5bf9\u4e00\u4e2adataframe\u91cc\u9762\u6bcf\u4e00\u4e2a\u5143\u7d20\u50cfmap\u90a3\u6837\u5168\u5c40\u64cd\u4f5c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df32.applymap(lambda x: float(x)*2 if x.isdigit() else x.upper())\n")),(0,l.kt)("h3",{id:"apply\u5219\u53ef\u4ee5\u5bf9\u4e00\u4e2adataframe\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2aseries"},"apply\u5219\u53ef\u4ee5\u5bf9\u4e00\u4e2aDataFrame\u64cd\u4f5c\u5f97\u5230\u4e00\u4e2aSeries"),(0,l.kt)("p",null,"\u4ed6\u4f1a\u6709\u70b9\u50cf\u6211\u4eec\u540e\u9762\u4ecb\u7ecd\u7684agg,\u4f46\u662fapply\u53ef\u4ee5\u6309\u884c\u64cd\u4f5c\u548c\u6309\u5217\u64cd\u4f5c\uff0c\u7528axis\u63a7\u5236\u5373\u53ef\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df32.apply(lambda x: x['nation'] + x['capital'] + '_' + x['GDP'], axis=1)\n")),(0,l.kt)("h3",{id:"33-\u6570\u636e\u6392\u5e8f"},"3.3 \u6570\u636e\u6392\u5e8f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"sort: \u6309\u4e00\u5217\u6216\u8005\u591a\u5217\u7684\u503c\u8fdb\u884c\u884c\u7ea7\u6392\u5e8f"),(0,l.kt)("li",{parentName:"ul"},"sort_index: \u6839\u636eindex\u91cc\u7684\u53d6\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e14\u53ef\u4ee5\u6839\u636eaxis\u51b3\u5b9a\u662f\u91cd\u6392\u884c\u8fd8\u662f\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"data_np = np.asarray([('Japan', 'Tokyo', 4000),\n                      ('Korea', 'Seoul', 1300),\n                      ('China', 'Beijing', 9100)])\ndf33 = pd.DataFrame(data_np, columns=['nation', 'capital', 'GDP'])\ndf33\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.sort_values(['capital', 'nation'])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.sort_values('GDP', ascending=False)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.sort_index(axis=1, ascending=True)\n")),(0,l.kt)("p",null,"\u4e00\u4e2a\u597d\u7528\u7684\u529f\u80fd\uff1aRank"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.rank()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33.rank(ascending=False)\n")),(0,l.kt)("p",null,"\u6ce8\u610ftied data\uff08\u76f8\u540c\u503c\uff09\u7684\u5904\u7406\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"method = 'average'"),(0,l.kt)("li",{parentName:"ul"},"method = 'min'"),(0,l.kt)("li",{parentName:"ul"},"method = 'max'"),(0,l.kt)("li",{parentName:"ul"},"method = 'first'")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x = pd.DataFrame({'name': ['\u8001\u738b', '\u8001\u5f20', '\u8001\u674e', '\u8001\u5218'],\n                      'sal': np.array([5000, 3000, 5000, 9000])})\ndf33x\n")),(0,l.kt)("p",null,"df33x.rank()\u9ed8\u8ba4\u4f7f\u7528method='average'\uff0c\u4e24\u6761\u6570\u636e\u76f8\u7b49\u65f6\uff0c\u5904\u7406\u6392\u540d\u65f6\u5927\u5bb6\u90fd\u7528\u5e73\u5747\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank()\n")),(0,l.kt)("p",null,"method='min'\uff0c\u5904\u7406\u6392\u540d\u65f6\u5927\u5bb6\u90fd\u7528\u6700\u5c0f\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank(method='min')\n")),(0,l.kt)("p",null,"method='max'\uff0c\u5904\u7406\u6392\u540d\u65f6\u5927\u5bb6\u90fd\u7528\u6700\u5927\u503c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank(method='max')\n")),(0,l.kt)("p",null,"method='first'\uff0c\u5904\u7406\u6392\u540d\u65f6\u8c01\u5148\u51fa\u73b0\u5c31\u5148\u7ed9\u8c01\u8f83\u5c0f\u7684\u6570\u503c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df33x.sal.rank(method='first')\n")),(0,l.kt)("h3",{id:"34-\u7f3a\u5931\u6570\u636e\u5904\u7406"},"3.4 \u7f3a\u5931\u6570\u636e\u5904\u7406"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"i = pd.Index([('Row_' + str(x), 'Col_' + str(y + 1)) for x in range(5) for y in range(x)])\ndata_multi = pd.Series(np.arange(10), index=i)\ndf34 = data_multi.unstack()\ndf34\n")),(0,l.kt)("p",null,"\u5ffd\u7565\u7f3a\u5931\u503c\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34.mean(skipna=True)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34.mean(skipna=False)\n")),(0,l.kt)("p",null,"\u5982\u679c\u4e0d\u60f3\u5ffd\u7565\u7f3a\u5931\u503c\u7684\u8bdd\uff0c\u5c31\u9700\u8981\u796d\u51fafillna\u4e86\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"df34.fillna(0).mean(axis=1, skipna=False)\n")),(0,l.kt)("h1",{id:"4-\u4e00\u7ec4\u5927\u718a\u732bpandas\u7684groupby"},"4. \u201c\u4e00\u7ec4\u201d\u5927\u718a\u732b\uff1aPandas\u7684groupby"),(0,l.kt)("p",null,"groupby\u7684\u529f\u80fd\u7c7b\u4f3cSQL\u7684group by\u5173\u952e\u5b57\uff1a"),(0,l.kt)("p",null,"Split-Apply-Combine"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Split\uff0c\u5c31\u662f\u6309\u7167\u89c4\u5219\u5206\u7ec4"),(0,l.kt)("li",{parentName:"ul"},"Apply\uff0c\u901a\u8fc7\u4e00\u5b9a\u7684agg\u51fd\u6570\u6765\u83b7\u5f97\u8f93\u5165pd.Series\u8fd4\u56de\u4e00\u4e2a\u503c\u7684\u6548\u679c"),(0,l.kt)("li",{parentName:"ul"},"Combine\uff0c\u628a\u7ed3\u679c\u6536\u96c6\u8d77\u6765")),(0,l.kt)("p",null,"Pandas\u7684groupby\u7684\u7075\u6d3b\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5206\u7ec4\u7684\u5173\u952e\u5b57\u53ef\u4ee5\u6765\u81ea\u4e8eindex\uff0c\u4e5f\u53ef\u4ee5\u6765\u81ea\u4e8e\u771f\u5b9e\u7684\u5217\u6570\u636e"),(0,l.kt)("li",{parentName:"ul"},"\u5206\u7ec4\u89c4\u5219\u53ef\u4ee5\u901a\u8fc7\u4e00\u5217\u6216\u8005\u591a\u5217")),(0,l.kt)("p",null,"\u5206\u7ec4\u7684\u5177\u4f53\u903b\u8f91"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"iris_file = '../data/numpy/iris.data.txt'\ncnames = ['sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'class']\n\nirisdata = pd.read_csv(iris_file, names=cnames, encoding='utf-8')\nirisdata\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"irisdata_group = irisdata.groupby('class')\nirisdata_group\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"for level, subsetDF in irisdata_group:\n    print(level)\n    print(subsetDF[::20])\n")),(0,l.kt)("p",null,"\u5206\u7ec4\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0MapReduce\u7684\u903b\u8f91"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Map: \u6307\u5b9a\u5206\u7ec4\u7684\u5217\u6807\u7b7e\uff0c\u4e0d\u540c\u7684\u503c\u5c31\u4f1a\u88ab\u6254\u5230\u4e0d\u540c\u7684\u5206\u7ec4\u5904\u7406"),(0,l.kt)("li",{parentName:"ul"},"Reduce: \u8f93\u5165\u591a\u4e2a\u503c\uff0c\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c\u4e00\u822c\u53ef\u4ee5\u901a\u8fc7agg\u5b9e\u73b0\uff0cagg\u80fd\u63a5\u53d7\u4e00\u4e2a\u51fd\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"irisdata.groupby('class').agg(lambda x:((x - x.mean())**3).sum() * (len(x) - 0.0) / \n                (len(x) - 1.0) / (len(x) - 2.0) / (x.std() * np.sqrt((len(x) - 0.0) / \n                                                                     (len(x)-1.0)))**3 if len(x) > 2 else None)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"import scipy.stats\nirisdata.groupby('class').agg(scipy.stats.skew)\n")),(0,l.kt)("h4",{id:"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c"},"\u6c47\u603b\u4e4b\u540e\u7684\u5e7f\u64ad\u64cd\u4f5c"),(0,l.kt)("p",null,"\u5728OLAP\u6570\u636e\u5e93\u4e0a\uff0c\u4e3a\u4e86\u907f\u514dgroupby+join\u7684\u4e8c\u6b21\u64cd\u4f5c\uff0c\u63d0\u51fa\u4e86sum()over(partition by)\u7684\u5f00\u7a97\u64cd\u4f5c\u3002"),(0,l.kt)("p",null,"\u5728Pandas\u4e2d\uff0c\u8fd9\u79cd\u64cd\u4f5c\u80fd\u591f\u8fdb\u4e00\u6b65\u88abtransform\u6240\u53d6\u4ee3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"pd.concat([irisdata, irisdata.groupby('class').transform('mean')], axis=1)[::20]\n")),(0,l.kt)("h4",{id:"\u4ea7\u751f-multiindex\u591a\u5217\u5206\u7ec4\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c"},"\u4ea7\u751f MultiIndex\uff08\u591a\u5217\u5206\u7ec4\uff09\u540e\u7684\u6570\u636e\u900f\u89c6\u8868\u64cd\u4f5c"),(0,l.kt)("p",null,"\u4e00\u822c\u6765\u8bf4\uff0c\u591a\u5217groupby\u7684\u4e00\u4e2a\u526f\u4f5c\u7528\u5c31\u662f.groupby().agg()\u4e4b\u540e\u4f60\u7684\u884cindex\u5df2\u7ecf\u53d8\u6210\u4e86\u4e00\u4e2a\u591a\u5217\u5206\u7ec4\u7684\u5206\u7ea7\u7d22\u5f15\u3002"),(0,l.kt)("p",null,"\u5982\u679c\u6211\u4eec\u5e0c\u671b\u8fbe\u5230Excel\u7684\u6570\u636e\u900f\u89c6\u8868\u7684\u6548\u679c\uff0c\u884c\u548c\u5217\u7684\u7d22\u5f15\u81ea\u7531\u4ea4\u6362\uff0c\u8fbe\u5230\u7edf\u8ba1\u76ee\u7684\uff0c\u7a76\u7adf\u5e94\u8be5\u600e\u4e48\u529e\u5462\uff1f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"factor1 = np.random.randint(0, 3, 50)\nfactor2 = np.random.randint(0, 2, 50)\nfactor3 = np.random.randint(0, 3, 50)\nvalues = np.random.randn(50)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF = pd.DataFrame({'F1': factor1, 'F2': factor2, 'F3': factor3, 'F4': values})\nhierindexDF.tail()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum = hierindexDF.groupby(['F1', 'F2', 'F3']).sum()\nhierindexDF_gbsum\n")),(0,l.kt)("p",null,"\u89c2\u5bdfIndex\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.index\n")),(0,l.kt)("p",null,"unstack\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65e0\u53c2\u6570\u65f6\uff0c\u628a\u6700\u672bindex\u7f6e\u6362\u5230column\u4e0a"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u6570\u5b57\u53c2\u6570\u65f6\uff0c\u628a\u6307\u5b9a\u4f4d\u7f6e\u7684index\u7f6e\u6362\u5230column\u4e0a"),(0,l.kt)("li",{parentName:"ul"},"\u6709\u5217\u8868\u53c2\u6570\u65f6\uff0c\u4f9d\u6b21\u628a\u7279\u5b9a\u4f4d\u7f6e\u7684index\u7f6e\u6362\u5230column\u4e0a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack()\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack(0)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack(1)\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack([2,0])\n")),(0,l.kt)("p",null,"\u66f4\u8fdb\u4e00\u6b65\u7684\uff0cstack\u7684\u529f\u80fd\u662f\u548cunstack\u5bf9\u5e94\uff0c\u628acolumn\u4e0a\u7684\u591a\u7ea7\u7d22\u5f15\u6362\u5230index\u4e0a\u53bb"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"hierindexDF_gbsum.unstack([2, 0]).stack([1, 2])\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")))}m.isMDXComponent=!0}}]);