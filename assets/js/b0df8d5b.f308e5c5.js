"use strict";(self.webpackChunkjiangmiemie=self.webpackChunkjiangmiemie||[]).push([[2390],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>_});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,_=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(_,l(l({ref:t},c),{},{components:n})):r.createElement(_,l({ref:t},c))}));function _(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[m]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9375:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={},l=void 0,o={unversionedId:"\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/5\u652f\u6301\u5411\u91cf\u673a",id:"\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/5\u652f\u6301\u5411\u91cf\u673a",title:"5\u652f\u6301\u5411\u91cf\u673a",description:"\u652f\u6301\u5411\u91cf\u673a",source:"@site/docs/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/5\u652f\u6301\u5411\u91cf\u673a.md",sourceDirName:"\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8",slug:"/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/5\u652f\u6301\u5411\u91cf\u673a",permalink:"/course/docs/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/5\u652f\u6301\u5411\u91cf\u673a",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4\u903b\u8f91\u56de\u5f52",permalink:"/course/docs/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/4\u903b\u8f91\u56de\u5f52"},next:{title:"6\u6734\u7d20\u8d1d\u53f6\u65af",permalink:"/course/docs/\u7b2c4\u90e8\u5206\u4f20\u7edf\u7b97\u6cd5\u5165\u95e8/6\u6734\u7d20\u8d1d\u53f6\u65af"}},s={},p=[{value:"\u652f\u6301\u5411\u91cf\u673a",id:"\u652f\u6301\u5411\u91cf\u673a",level:2},{value:"\u7b80\u5355\u793a\u4f8b",id:"\u7b80\u5355\u793a\u4f8b",level:3},{value:"\u6548\u679c\u8bc4\u4f30",id:"\u6548\u679c\u8bc4\u4f30",level:3},{value:"\u6570\u636enormalization",id:"\u6570\u636enormalization",level:3},{value:"\u9632\u6b62\u8fc7\u62df\u5408",id:"\u9632\u6b62\u8fc7\u62df\u5408",level:3}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u652f\u6301\u5411\u91cf\u673a"},"\u652f\u6301\u5411\u91cf\u673a"),(0,a.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u5206\u7c7b\u7b97\u6cd5\u3002"),(0,a.kt)("p",null,"\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\u6211\u4eec\u5c06\u6bcf\u4e00\u4e2a\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u70b9\u5728\u4e00\u4e2an\u7ef4\u7a7a\u95f4\u4e0a\u4f5c\u56fe\uff08n\u662f\u7279\u5f81\u6570\uff09\uff0c\u6bcf\u4e00\u4e2a\u7279\u5f81\u503c\u5c31\u4ee3\u8868\u5bf9\u5e94\u5750\u6807\u503c\u7684\u5927\u5c0f\u3002"),(0,a.kt)("p",null,"\u6bd4\u5982\u8bf4\u6211\u4eec\u6709\u4e24\u4e2a\u7279\u5f81\uff1a\u4e00\u4e2a\u4eba\u7684\u8eab\u9ad8\u548c\u53d1\u957f\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e24\u4e2a\u53d8\u91cf\u5728\u4e00\u4e2a\u4e8c\u7ef4\u7a7a\u95f4\u4e0a\u4f5c\u56fe\uff0c\u56fe\u4e0a\u7684\u6bcf\u4e2a\u70b9\u90fd\u6709\u4e24\u4e2a\u5750\u6807\u503c\uff08\u8fd9\u4e9b\u5750\u6807\u8f74\u4e5f\u53eb\u505a\u652f\u6301\u5411\u91cf\uff09\u3002"),(0,a.kt)("p",null,"\u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9996\u5148\u5bfc\u5165\u4e86scikit-learn\u5e93\u4e2d\u7684svm\u6a21\u5757\u4ee5\u53caNumPy\u5e93\u3002\u7136\u540e\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e9b\u793a\u4f8b\u6570\u636e X \u548c y\uff0c\u5176\u4e2d X \u662f\u7279\u5f81\uff0cy \u662f\u76ee\u6807\u6807\u7b7e\u3002"),(0,a.kt)("p",null,"\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2aSVM\u5206\u7c7b\u5668\uff0c\u4f7f\u7528\u7ebf\u6027\u6838\u51fd\u6570\uff08kernel='linear'\uff09\u3002"),(0,a.kt)("p",null,"\u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 fit \u65b9\u6cd5\u62df\u5408\u4e86\u6a21\u578b\uff0c\u5e76\u5728\u65b0\u6570\u636e\u70b9\u4e0a\u4f7f\u7528 predict \u65b9\u6cd5\u8fdb\u884c\u9884\u6d4b\uff0c\u4ee5\u83b7\u53d6\u65b0\u6570\u636e\u70b9\u7684\u7c7b\u522b\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from sklearn import svm\nimport numpy as np\n\n# \u521b\u5efa\u4e00\u4e9b\u793a\u4f8b\u6570\u636e\nX = np.array([[1, 2], [2, 3], [2, 5], [3, 2], [3, 3], [4, 5]])  # \u7279\u5f81\ny = np.array([0, 0, 1, 0, 1, 1])  # \u76ee\u6807\u6807\u7b7e\n\n# \u521b\u5efaSVM\u5206\u7c7b\u5668\nmodel = svm.SVC(kernel="linear")\n\n# \u62df\u5408\u6a21\u578b\nmodel.fit(X, y)\n\n# \u9884\u6d4b\u65b0\u6570\u636e\u70b9\nnew_data_point = np.array([[3, 4]])  # \u8981\u9884\u6d4b\u7684\u65b0\u6570\u636e\u70b9\npredicted_class = model.predict(new_data_point)\n\nprint("\u9884\u6d4b\u7c7b\u522b:", predicted_class)\n')),(0,a.kt)("h3",{id:"\u7b80\u5355\u793a\u4f8b"},"\u7b80\u5355\u793a\u4f8b"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from sklearn.model_selection import train_test_split\nfrom sklearn.datasets import load_breast_cancer\nfrom sklearn import svm\n\n# \u5bfc\u5165\u4e00\u4e2a\u6570\u636e\u91cf\u8f83\u591a\u7684\u6570\u636e\uff0c\u4e73\u817a\u764c\niris = load_breast_cancer()\nX, y = iris.data ,iris.target\n\n# \u76f4\u63a5\u4f7f\u7528\u6570\u636e\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)\nclf = svm.SVC()\nclf.fit(X_train, y_train)\n")),(0,a.kt)("h3",{id:"\u6548\u679c\u8bc4\u4f30"},"\u6548\u679c\u8bc4\u4f30"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"print('\u9884\u6d4b\u662f\u51c6\u786e\u5ea6\u4e3a{}%'.format(clf.score(X_test, y_test)*100))\n")),(0,a.kt)("h3",{id:"\u6570\u636enormalization"},"\u6570\u636enormalization"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from sklearn import preprocessing\n\n# \u5148\u6807\u51c6\u5316\u6570\u636e\u518d\u4f7f\u7528\u6570\u636e\nX2 = preprocessing.scale(X)    # normalization step\n# print(X2)\nX2_train, X2_test, y2_train, y2_test = train_test_split(X2, y, test_size=0.3)\n\nclf2 = svm.SVC()\nclf2.fit(X2_train, y2_train)\nprint('\u9884\u6d4b\u662f\u51c6\u786e\u5ea6\u4e3a{}%'.format(clf2.score(X2_test, y2_test)*100))\n# \u7b80\u5355\u9a8c\u8bc1\u540e\u53d1\u73b0\u5904\u7406\u540e\u7684\u6570\u636e\u663e\u7136\u8868\u73b0\u66f4\u597d\uff0c\u9884\u6d4b\u662f\u51c6\u786e\u5ea6\u4e3a98.83040935672514%\n\nfrom sklearn import model_selection\n\n# \u4f46\u662f\u5e76\u4e0d\u662f\u6bcf\u6b21\u9a8c\u8bc1\u5f97\u5230\u7684\u7ed3\u679c\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u9a8c\u8bc1\u5177\u6709\u968f\u673a\u6027\uff0c\u56e0\u6b64\u9700\u8981\u4ea4\u53c9\u9a8c\u8bc1\n# \u628a\u6570\u636e\u5206\u62105\u4efd\uff0c\u5206\u522b\u505a\u6d4b\u8bd5\u96c6\uff0c\u63d0\u53d6\u5206\u6570\u5e76\u6c42\u5e73\u5747\u503c\uff0c\u663e\u7136\u5904\u7406\u540e\u7684\u6570\u636e\u8868\u73b0\u66f4\u597d\nprint(model_selection.cross_validate(clf,X_test, y_test,cv=5)['test_score'].mean())\nprint(model_selection.cross_validate(clf2,X2_test, y2_test,cv=5)['test_score'].mean())\n'''\n0.8947899159663866\n0.9825210084033614\n'''\n")),(0,a.kt)("h3",{id:"\u9632\u6b62\u8fc7\u62df\u5408"},"\u9632\u6b62\u8fc7\u62df\u5408"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from __future__ import print_function\nfrom sklearn.model_selection import  learning_curve\nfrom sklearn.datasets import load_digits\nfrom sklearn.svm import SVC\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndigits = load_digits()\nX = digits.data\ny = digits.target\ntrain_sizes, train_loss, test_loss= learning_curve(\n        SVC(gamma=0.01), X, y, cv=10, scoring="neg_mean_squared_error",\n        train_sizes=[0.1, 0.25, 0.5, 0.75, 1])\ntrain_loss_mean = -np.mean(train_loss, axis=1)\ntest_loss_mean = -np.mean(test_loss, axis=1)\n\nplt.plot(train_sizes, train_loss_mean, \'o-\', color="r",\n             label="Training")\nplt.plot(train_sizes, test_loss_mean, \'o-\', color="g",\n             label="test-Cross-validation")\n\nplt.xlabel("Training examples")\nplt.ylabel("Loss")\nplt.legend(loc="best")\nplt.show()\n')))}u.isMDXComponent=!0}}]);